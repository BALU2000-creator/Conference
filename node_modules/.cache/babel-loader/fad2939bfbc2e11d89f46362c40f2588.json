{"ast":null,"code":"var _jsxFileName = \"/home/vit/videosdk-rtc-react-sdk-example/src/components/JoiningScreen.js\",\n    _s = $RefreshSig$();\n\nimport { TextField, Box, Button, InputAdornment, useTheme, Grid, makeStyles, IconButton, Tooltip, Typography } from \"@material-ui/core\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Person, VideocamOff, MicOff, Mic, Videocam, ArrowBack } from \"@material-ui/icons\";\nimport useResponsiveSize from \"../utils/useResponsiveSize\";\nimport { red } from \"@material-ui/core/colors\";\nimport { MeetingDetailsScreen } from \"./MeetingDetailsScreen\";\nimport { createMeeting, getToken, validateMeeting } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  video: {\n    borderRadius: \"10px\",\n    backgroundColor: \"#1c1c1c\",\n    height: \"100%\",\n    width: \"100%\",\n    objectFit: \"cover\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  toggleButton: {\n    borderRadius: \"100%\",\n    minWidth: \"auto\",\n    width: \"44px\",\n    height: \"44px\"\n  },\n  previewBox: {\n    width: \"100%\",\n    height: \"45vh\",\n    position: \"relative\"\n  }\n}));\nexport function JoiningScreen(_ref) {\n  _s();\n\n  let {\n    participantName,\n    setParticipantName,\n    meetingId,\n    setMeetingId,\n    setToken,\n    setWebcamOn,\n    setMicOn,\n    micOn,\n    webcamOn,\n    onClickStartMeeting\n  } = _ref;\n  const [readyToJoin, setReadyToJoin] = useState(false);\n  const videoPlayerRef = useRef();\n  const theme = useTheme();\n  const styles = useStyles(theme);\n  const [videoTrack, setVideoTrack] = useState(null);\n  const padding = useResponsiveSize({\n    xl: 6,\n    lg: 6,\n    md: 6,\n    sm: 4,\n    xs: 1.5\n  });\n\n  const _handleToggleMic = () => {\n    setMicOn(!micOn);\n  };\n\n  const _handleToggleWebcam = () => {\n    if (!webcamOn) {\n      getVideo();\n    } else {\n      if (videoTrack) {\n        videoTrack.stop();\n        setVideoTrack(null);\n      }\n    }\n\n    setWebcamOn(!webcamOn);\n  };\n\n  const getVideo = async () => {\n    if (videoPlayerRef.current) {\n      const videoConstraints = {\n        video: {\n          width: 1280,\n          height: 720\n        }\n      };\n      const stream = await navigator.mediaDevices.getUserMedia(videoConstraints);\n      const videoTracks = stream.getVideoTracks();\n      const videoTrack = videoTracks.length ? videoTracks[0] : null;\n      videoPlayerRef.current.srcObject = new MediaStream([videoTrack]);\n      videoPlayerRef.current.play();\n\n      if (!videoTrack) {\n        setWebcamOn(false);\n      }\n\n      setVideoTrack(videoTrack);\n    }\n  };\n\n  useEffect(() => {\n    if (webcamOn && !videoTrack) {\n      getVideo();\n    }\n  }, [webcamOn]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    style: {\n      display: \"flex\",\n      flex: 1,\n      flexDirection: \"column\",\n      height: \"100vh\",\n      alignItems: \"center\",\n      backgroundColor: theme.palette.background.default,\n      padding: padding\n    },\n    children: [readyToJoin ? /*#__PURE__*/_jsxDEV(Box, {\n      position: \"absolute\",\n      style: {\n        top: theme.spacing(2),\n        right: 0,\n        left: theme.spacing(2)\n      },\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: () => {\n          setReadyToJoin(false);\n        },\n        children: /*#__PURE__*/_jsxDEV(ArrowBack, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 6,\n      style: {\n        width: \"100%\",\n        height: \"100%\",\n        display: \"flex\",\n        flex: 1,\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: readyToJoin ? /*#__PURE__*/_jsxDEV(Box, {\n        m: 6,\n        style: {\n          display: \"flex\",\n          flex: 1,\n          width: \"100%\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          padding: padding\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          className: styles.previewBox,\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            autoplay: true,\n            playsInline: true,\n            muted: true,\n            ref: videoPlayerRef,\n            controls: false,\n            className: styles.video + \" flip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this), !webcamOn ? /*#__PURE__*/_jsxDEV(Box, {\n            position: \"absolute\",\n            style: {\n              top: 0,\n              bottom: 0,\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              right: 0,\n              left: 0\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Camera is Turned Off\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 17\n          }, this) : null, /*#__PURE__*/_jsxDEV(Box, {\n            position: \"absolute\",\n            bottom: theme.spacing(2),\n            left: \"0\",\n            right: \"0\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              alignItems: \"center\",\n              justify: \"center\",\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: micOn ? \"Turn off mic\" : \"Turn on mic\",\n                  arrow: true,\n                  placement: \"top\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => _handleToggleMic(),\n                    variant: \"contained\",\n                    style: micOn ? {} : {\n                      backgroundColor: red[500],\n                      color: \"white\"\n                    },\n                    className: styles.toggleButton,\n                    children: micOn ? /*#__PURE__*/_jsxDEV(Mic, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 230,\n                      columnNumber: 34\n                    }, this) : /*#__PURE__*/_jsxDEV(MicOff, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 230,\n                      columnNumber: 44\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: webcamOn ? \"Turn off camera\" : \"Turn on camera\",\n                  arrow: true,\n                  placement: \"top\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => _handleToggleWebcam(),\n                    variant: \"contained\",\n                    style: webcamOn ? {} : {\n                      backgroundColor: red[500],\n                      color: \"white\"\n                    },\n                    className: styles.toggleButton,\n                    children: webcamOn ? /*#__PURE__*/_jsxDEV(Videocam, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 251,\n                      columnNumber: 37\n                    }, this) : /*#__PURE__*/_jsxDEV(VideocamOff, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 251,\n                      columnNumber: 52\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          style: {\n            width: \"100%\",\n            marginTop: \"1rem\"\n          },\n          id: \"outlined\",\n          label: \"Name\",\n          helperText: participantName.length < 3 ? \"Enter Name with which you would like to join meeting\" : \"\",\n          onChange: e => {\n            setParticipantName(e.target.value);\n          },\n          variant: \"outlined\",\n          defaultValue: participantName,\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(Person, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 19\n            }, this),\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                disabled: participantName.length < 3,\n                color: \"primary\",\n                variant: \"contained\",\n                onClick: e => {\n                  if (videoTrack) {\n                    videoTrack.stop();\n                    setVideoTrack(null);\n                  }\n\n                  onClickStartMeeting();\n                },\n                id: \"btnJoin\",\n                children: \"Start\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 19\n            }, this)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(MeetingDetailsScreen, {\n        onClickJoin: async id => {\n          const token = await getToken();\n          const valid = await validateMeeting({\n            meetingId: id,\n            token\n          });\n\n          if (valid) {\n            setReadyToJoin(true);\n            setToken(token);\n            setMeetingId(id);\n            setWebcamOn(true);\n            setMicOn(true);\n          } else alert(\"Invalid Meeting Id\");\n        },\n        onClickCreateMeeting: async () => {\n          const token = await getToken();\n\n          const _meetingId = await createMeeting({\n            token\n          });\n\n          setToken(token);\n          setMeetingId(_meetingId);\n          setReadyToJoin(true);\n          setWebcamOn(true);\n          setMicOn(true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n\n_s(JoiningScreen, \"Swqc/Z6zudrADtIGhjzZLJJzNmI=\", false, function () {\n  return [useTheme, useStyles, useResponsiveSize];\n});\n\n_c = JoiningScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"JoiningScreen\");","map":{"version":3,"sources":["/home/vit/videosdk-rtc-react-sdk-example/src/components/JoiningScreen.js"],"names":["TextField","Box","Button","InputAdornment","useTheme","Grid","makeStyles","IconButton","Tooltip","Typography","React","useEffect","useRef","useState","Person","VideocamOff","MicOff","Mic","Videocam","ArrowBack","useResponsiveSize","red","MeetingDetailsScreen","createMeeting","getToken","validateMeeting","useStyles","theme","video","borderRadius","backgroundColor","height","width","objectFit","display","alignItems","justifyContent","toggleButton","minWidth","previewBox","position","JoiningScreen","participantName","setParticipantName","meetingId","setMeetingId","setToken","setWebcamOn","setMicOn","micOn","webcamOn","onClickStartMeeting","readyToJoin","setReadyToJoin","videoPlayerRef","styles","videoTrack","setVideoTrack","padding","xl","lg","md","sm","xs","_handleToggleMic","_handleToggleWebcam","getVideo","stop","current","videoConstraints","stream","navigator","mediaDevices","getUserMedia","videoTracks","getVideoTracks","length","srcObject","MediaStream","play","flex","flexDirection","palette","background","default","top","spacing","right","left","bottom","color","marginTop","e","target","value","startAdornment","endAdornment","id","token","valid","alert","_meetingId"],"mappings":"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","sourcesContent":["import {\n  TextField,\n  Box,\n  Button,\n  InputAdornment,\n  useTheme,\n  Grid,\n  makeStyles,\n  IconButton,\n  Tooltip,\n  Typography,\n} from \"@material-ui/core\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport {\n  Person,\n  VideocamOff,\n  MicOff,\n  Mic,\n  Videocam,\n  ArrowBack,\n} from \"@material-ui/icons\";\nimport useResponsiveSize from \"../utils/useResponsiveSize\";\nimport { red } from \"@material-ui/core/colors\";\nimport { MeetingDetailsScreen } from \"./MeetingDetailsScreen\";\nimport { createMeeting, getToken, validateMeeting } from \"../api\";\n\nconst useStyles = makeStyles((theme) => ({\n  video: {\n    borderRadius: \"10px\",\n    backgroundColor: \"#1c1c1c\",\n    height: \"100%\",\n    width: \"100%\",\n    objectFit: \"cover\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n\n  toggleButton: {\n    borderRadius: \"100%\",\n    minWidth: \"auto\",\n    width: \"44px\",\n    height: \"44px\",\n  },\n\n  previewBox: {\n    width: \"100%\",\n    height: \"45vh\",\n    position: \"relative\",\n  },\n}));\n\nexport function JoiningScreen({\n  participantName,\n  setParticipantName,\n  meetingId,\n  setMeetingId,\n  setToken,\n  setWebcamOn,\n  setMicOn,\n  micOn,\n  webcamOn,\n  onClickStartMeeting,\n}) {\n  const [readyToJoin, setReadyToJoin] = useState(false);\n  const videoPlayerRef = useRef();\n  const theme = useTheme();\n  const styles = useStyles(theme);\n\n  const [videoTrack, setVideoTrack] = useState(null);\n\n  const padding = useResponsiveSize({\n    xl: 6,\n    lg: 6,\n    md: 6,\n    sm: 4,\n    xs: 1.5,\n  });\n\n  const _handleToggleMic = () => {\n    setMicOn(!micOn);\n  };\n  const _handleToggleWebcam = () => {\n    if (!webcamOn) {\n      getVideo();\n    } else {\n      if (videoTrack) {\n        videoTrack.stop();\n        setVideoTrack(null);\n      }\n    }\n    setWebcamOn(!webcamOn);\n  };\n\n  const getVideo = async () => {\n    if (videoPlayerRef.current) {\n      const videoConstraints = {\n        video: {\n          width: 1280,\n          height: 720,\n        },\n      };\n\n      const stream = await navigator.mediaDevices.getUserMedia(\n        videoConstraints\n      );\n      const videoTracks = stream.getVideoTracks();\n\n      const videoTrack = videoTracks.length ? videoTracks[0] : null;\n\n      videoPlayerRef.current.srcObject = new MediaStream([videoTrack]);\n      videoPlayerRef.current.play();\n      if (!videoTrack) {\n        setWebcamOn(false);\n      }\n      setVideoTrack(videoTrack);\n    }\n  };\n\n  useEffect(() => {\n    if (webcamOn && !videoTrack) {\n      getVideo();\n    }\n  }, [webcamOn]);\n\n  return (\n    <Box\n      style={{\n        display: \"flex\",\n        flex: 1,\n        flexDirection: \"column\",\n        height: \"100vh\",\n        alignItems: \"center\",\n        backgroundColor: theme.palette.background.default,\n        padding: padding,\n      }}>\n      {readyToJoin ? (\n        <Box\n          position=\"absolute\"\n          style={{\n            top: theme.spacing(2),\n            right: 0,\n            left: theme.spacing(2),\n          }}>\n          <IconButton\n            onClick={() => {\n              setReadyToJoin(false);\n            }}>\n            <ArrowBack />\n          </IconButton>\n        </Box>\n      ) : null}\n      <Grid\n        item\n        xs={12}\n        md={6}\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          display: \"flex\",\n          flex: 1,\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}>\n        {readyToJoin ? (\n          <Box\n            m={6}\n            style={{\n              display: \"flex\",\n              flex: 1,\n              width: \"100%\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              padding: padding,\n            }}>\n            <Box className={styles.previewBox}>\n              <video\n                autoplay\n                playsInline\n                muted\n                ref={videoPlayerRef}\n                controls={false}\n                className={styles.video + \" flip\"}\n              />\n\n              {!webcamOn ? (\n                <Box\n                  position=\"absolute\"\n                  style={{\n                    top: 0,\n                    bottom: 0,\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    right: 0,\n                    left: 0,\n                  }}>\n                  <Typography>Camera is Turned Off</Typography>\n                </Box>\n              ) : null}\n\n              <Box\n                position=\"absolute\"\n                bottom={theme.spacing(2)}\n                left=\"0\"\n                right=\"0\">\n                <Grid\n                  container\n                  alignItems=\"center\"\n                  justify=\"center\"\n                  spacing={2}>\n                  <Grid item>\n                    <Tooltip\n                      title={micOn ? \"Turn off mic\" : \"Turn on mic\"}\n                      arrow\n                      placement=\"top\">\n                      <Button\n                        onClick={() => _handleToggleMic()}\n                        variant=\"contained\"\n                        style={\n                          micOn\n                            ? {}\n                            : {\n                              backgroundColor: red[500],\n                              color: \"white\",\n                            }\n                        }\n                        className={styles.toggleButton}>\n                        {micOn ? <Mic /> : <MicOff />}\n                      </Button>\n                    </Tooltip>\n                  </Grid>\n                  <Grid item>\n                    <Tooltip\n                      title={webcamOn ? \"Turn off camera\" : \"Turn on camera\"}\n                      arrow\n                      placement=\"top\">\n                      <Button\n                        onClick={() => _handleToggleWebcam()}\n                        variant=\"contained\"\n                        style={\n                          webcamOn\n                            ? {}\n                            : {\n                              backgroundColor: red[500],\n                              color: \"white\",\n                            }\n                        }\n                        className={styles.toggleButton}>\n                        {webcamOn ? <Videocam /> : <VideocamOff />}\n                      </Button>\n                    </Tooltip>\n                  </Grid>\n                </Grid>\n              </Box>\n            </Box>\n            <TextField\n              style={{\n                width: \"100%\",\n                marginTop: \"1rem\",\n              }}\n              id=\"outlined\"\n              label=\"Name\"\n              helperText={\n                participantName.length < 3\n                  ? \"Enter Name with which you would like to join meeting\"\n                  : \"\"\n              }\n              onChange={(e) => {\n                setParticipantName(e.target.value);\n              }}\n              variant=\"outlined\"\n              defaultValue={participantName}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <Person />\n                  </InputAdornment>\n                ),\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <Button\n                      disabled={participantName.length < 3}\n                      color=\"primary\"\n                      variant=\"contained\"\n                      onClick={(e) => {\n                        if (videoTrack) {\n                          videoTrack.stop();\n                          setVideoTrack(null);\n                        }\n                        onClickStartMeeting();\n                      }}\n                      id={\"btnJoin\"}>\n                      Start\n                    </Button>\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </Box>\n        ) : (\n          <MeetingDetailsScreen\n            onClickJoin={async (id) => {\n              const token = await getToken();\n              const valid = await validateMeeting({ meetingId: id, token });\n              if (valid) {\n                setReadyToJoin(true);\n                setToken(token);\n                setMeetingId(id);\n                setWebcamOn(true);\n                setMicOn(true);\n              } else alert(\"Invalid Meeting Id\");\n            }}\n            onClickCreateMeeting={async () => {\n              const token = await getToken();\n              const _meetingId = await createMeeting({ token });\n              setToken(token);\n              setMeetingId(_meetingId);\n              setReadyToJoin(true);\n              setWebcamOn(true);\n              setMicOn(true);\n            }}\n          />\n        )}\n      </Grid>\n    </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}