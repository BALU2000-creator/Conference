{"ast":null,"code":"import React, { createContext, useEffect, useContext, useState, useRef, useMemo } from 'react';\nimport EventEmitter from 'events';\nimport { VideoSDK } from '@videosdk.live/js-sdk';\nvar eventPrifix = 'videosdk-live-react-sdk';\nvar events = {\n  'participant-joined': eventPrifix + \"-participant-joined\",\n  'participant-left': eventPrifix + \"-participant-left\",\n  'speaker-changed': eventPrifix + \"-speaker-changed\",\n  'presenter-changed': eventPrifix + \"-presenter-changed\",\n  'main-participant-changed': eventPrifix + \"-main-participant-changed\",\n  'entry-requested': eventPrifix + \"-entry-requested\",\n  'entry-responded': eventPrifix + \"-entry-responded\",\n  'recording-started': eventPrifix + \"-recording-started\",\n  'recording-stopped': eventPrifix + \"-recording-stopped\",\n  'chat-message': eventPrifix + \"-chat-message\",\n  'meeting-joined': eventPrifix + \"-meeting-joined\",\n  'meeting-left': eventPrifix + \"-meeting-left\",\n  'live-stream-started': eventPrifix + \"-live-stream-started\",\n  'live-stream-stopped': eventPrifix + \"-live-stream-stopped\",\n  'video-state-changed': eventPrifix + \"-video-state-changed\",\n  'video-seeked': eventPrifix + \"-video-seeked\",\n  'webcam-requested': eventPrifix + \"-webcam-requested\",\n  'mic-requested': eventPrifix + \"-mic-requested\",\n  'pin-state-changed': eventPrifix + \"-pin-state-changed\",\n  'connection-open': eventPrifix + \"-connection-open\",\n  'connection-close': eventPrifix + \"-connection-close\",\n  'switch-meeting': eventPrifix + \"-switch-meeting\",\n  error: eventPrifix + \"-error\",\n  'hls-started': eventPrifix + \"-hls-started\",\n  'hls-stopped': eventPrifix + \"-hls-stopped\",\n  'recording-state-changed': eventPrifix + \"-recording-state-changed\",\n  'livestream-state-changed': eventPrifix + \"-livestream-state-changed\",\n  'meeting-state-changed': eventPrifix + \"-meeting-state-changed\"\n};\nvar eventEmitter = new EventEmitter();\neventEmitter.setMaxListeners(9999);\nvar MeetingProviderContex = createContext();\n\nvar useMeeting = function useMeeting(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$onParticipantJoi = _ref.onParticipantJoined,\n      onParticipantJoined = _ref$onParticipantJoi === void 0 ? function () {} : _ref$onParticipantJoi,\n      _ref$onParticipantLef = _ref.onParticipantLeft,\n      onParticipantLeft = _ref$onParticipantLef === void 0 ? function () {} : _ref$onParticipantLef,\n      _ref$onSpeakerChanged = _ref.onSpeakerChanged,\n      onSpeakerChanged = _ref$onSpeakerChanged === void 0 ? function () {} : _ref$onSpeakerChanged,\n      _ref$onPresenterChang = _ref.onPresenterChanged,\n      onPresenterChanged = _ref$onPresenterChang === void 0 ? function () {} : _ref$onPresenterChang,\n      _ref$onMainParticipan = _ref.onMainParticipantChanged,\n      onMainParticipantChanged = _ref$onMainParticipan === void 0 ? function () {} : _ref$onMainParticipan,\n      _ref$onEntryRequested = _ref.onEntryRequested,\n      onEntryRequested = _ref$onEntryRequested === void 0 ? function () {} : _ref$onEntryRequested,\n      _ref$onEntryResponded = _ref.onEntryResponded,\n      onEntryResponded = _ref$onEntryResponded === void 0 ? function () {} : _ref$onEntryResponded,\n      _ref$onRecordingStart = _ref.onRecordingStarted,\n      onRecordingStarted = _ref$onRecordingStart === void 0 ? function () {} : _ref$onRecordingStart,\n      _ref$onRecordingStopp = _ref.onRecordingStopped,\n      onRecordingStopped = _ref$onRecordingStopp === void 0 ? function () {} : _ref$onRecordingStopp,\n      _ref$onChatMessage = _ref.onChatMessage,\n      onChatMessage = _ref$onChatMessage === void 0 ? function () {} : _ref$onChatMessage,\n      _ref$onMeetingJoined = _ref.onMeetingJoined,\n      onMeetingJoined = _ref$onMeetingJoined === void 0 ? function () {} : _ref$onMeetingJoined,\n      _ref$onMeetingLeft = _ref.onMeetingLeft,\n      onMeetingLeft = _ref$onMeetingLeft === void 0 ? function () {} : _ref$onMeetingLeft,\n      _ref$onLiveStreamStar = _ref.onLiveStreamStarted,\n      onLiveStreamStarted = _ref$onLiveStreamStar === void 0 ? function () {} : _ref$onLiveStreamStar,\n      _ref$onLiveStreamStop = _ref.onLiveStreamStopped,\n      onLiveStreamStopped = _ref$onLiveStreamStop === void 0 ? function () {} : _ref$onLiveStreamStop,\n      _ref$onVideoStateChan = _ref.onVideoStateChanged,\n      onVideoStateChanged = _ref$onVideoStateChan === void 0 ? function () {} : _ref$onVideoStateChan,\n      _ref$onVideoSeeked = _ref.onVideoSeeked,\n      onVideoSeeked = _ref$onVideoSeeked === void 0 ? function () {} : _ref$onVideoSeeked,\n      _ref$onWebcamRequeste = _ref.onWebcamRequested,\n      onWebcamRequested = _ref$onWebcamRequeste === void 0 ? function () {} : _ref$onWebcamRequeste,\n      _ref$onMicRequested = _ref.onMicRequested,\n      onMicRequested = _ref$onMicRequested === void 0 ? function () {} : _ref$onMicRequested,\n      _ref$onPinStateChange = _ref.onPinStateChanged,\n      onPinStateChanged = _ref$onPinStateChange === void 0 ? function () {} : _ref$onPinStateChange,\n      _ref$onConnectionOpen = _ref.onConnectionOpen,\n      onConnectionOpen = _ref$onConnectionOpen === void 0 ? function () {} : _ref$onConnectionOpen,\n      _ref$onConnetionClose = _ref.onConnetionClose,\n      onConnetionClose = _ref$onConnetionClose === void 0 ? function () {} : _ref$onConnetionClose,\n      _ref$onSwitchMeeting = _ref.onSwitchMeeting,\n      onSwitchMeeting = _ref$onSwitchMeeting === void 0 ? function () {} : _ref$onSwitchMeeting,\n      _ref$onError = _ref.onError,\n      onError = _ref$onError === void 0 ? function () {} : _ref$onError,\n      _ref$onHlsStarted = _ref.onHlsStarted,\n      onHlsStarted = _ref$onHlsStarted === void 0 ? function () {} : _ref$onHlsStarted,\n      _ref$onHlsStopped = _ref.onHlsStopped,\n      onHlsStopped = _ref$onHlsStopped === void 0 ? function () {} : _ref$onHlsStopped,\n      _ref$onRecordingState = _ref.onRecordingStateChanged,\n      onRecordingStateChanged = _ref$onRecordingState === void 0 ? function () {} : _ref$onRecordingState,\n      _ref$onLivestreamStat = _ref.onLivestreamStateChanged,\n      onLivestreamStateChanged = _ref$onLivestreamStat === void 0 ? function () {} : _ref$onLivestreamStat,\n      _ref$onMeetingStateCh = _ref.onMeetingStateChanged,\n      onMeetingStateChanged = _ref$onMeetingStateCh === void 0 ? function () {} : _ref$onMeetingStateCh;\n\n  useEffect(function () {\n    eventEmitter.on(events['participant-joined'], onParticipantJoined);\n    eventEmitter.on(events['participant-left'], onParticipantLeft);\n    eventEmitter.on(events['speaker-changed'], onSpeakerChanged);\n    eventEmitter.on(events['presenter-changed'], onPresenterChanged);\n    eventEmitter.on(events['main-participant-changed'], onMainParticipantChanged);\n    eventEmitter.on(events['entry-requested'], onEntryRequested);\n    eventEmitter.on(events['entry-responded'], onEntryResponded);\n    eventEmitter.on(events['recording-started'], onRecordingStarted);\n    eventEmitter.on(events['recording-stopped'], onRecordingStopped);\n    eventEmitter.on(events['chat-message'], onChatMessage);\n    eventEmitter.on(events['meeting-joined'], onMeetingJoined);\n    eventEmitter.on(events['meeting-left'], onMeetingLeft);\n    eventEmitter.on(events['live-stream-started'], onLiveStreamStarted);\n    eventEmitter.on(events['live-stream-stopped'], onLiveStreamStopped);\n    eventEmitter.on(events['video-state-changed'], onVideoStateChanged);\n    eventEmitter.on(events['video-seeked'], onVideoSeeked);\n    eventEmitter.on(events['webcam-requested'], onWebcamRequested);\n    eventEmitter.on(events['mic-requested'], onMicRequested);\n    eventEmitter.on(events['pin-state-changed'], onPinStateChanged);\n    eventEmitter.on(events['connection-open'], onConnectionOpen);\n    eventEmitter.on(events['connection-close'], onConnetionClose);\n    eventEmitter.on(events['switch-meeting'], onSwitchMeeting);\n    eventEmitter.on(events['error'], onError);\n    eventEmitter.on(events['hls-started'], onHlsStarted);\n    eventEmitter.on(events['hls-stopped'], onHlsStopped);\n    eventEmitter.on(events['recording-state-changed'], onRecordingStateChanged);\n    eventEmitter.on(events['livestream-state-changed'], onLivestreamStateChanged);\n    eventEmitter.on(events['meeting-state-changed'], onMeetingStateChanged);\n    return function () {\n      eventEmitter.off(events['meeting-state-changed'], onMeetingStateChanged);\n      eventEmitter.off(events['participant-joined'], onParticipantJoined);\n      eventEmitter.off(events['participant-left'], onParticipantLeft);\n      eventEmitter.off(events['speaker-changed'], onSpeakerChanged);\n      eventEmitter.off(events['presenter-changed'], onPresenterChanged);\n      eventEmitter.off(events['main-participant-changed'], onMainParticipantChanged);\n      eventEmitter.off(events['entry-requested'], onEntryRequested);\n      eventEmitter.off(events['entry-responded'], onEntryResponded);\n      eventEmitter.off(events['recording-started'], onRecordingStarted);\n      eventEmitter.off(events['recording-stopped'], onRecordingStopped);\n      eventEmitter.off(events['chat-message'], onChatMessage);\n      eventEmitter.off(events['meeting-joined'], onMeetingJoined);\n      eventEmitter.off(events['meeting-left'], onMeetingLeft);\n      eventEmitter.off(events['live-stream-started'], onLiveStreamStarted);\n      eventEmitter.off(events['live-stream-stopped'], onLiveStreamStopped);\n      eventEmitter.off(events['video-state-changed'], onVideoStateChanged);\n      eventEmitter.off(events['video-seeked'], onVideoSeeked);\n      eventEmitter.off(events['webcam-requested'], onWebcamRequested);\n      eventEmitter.off(events['mic-requested'], onMicRequested);\n      eventEmitter.off(events['pin-state-changed'], onPinStateChanged);\n      eventEmitter.off(events['connection-open'], onConnectionOpen);\n      eventEmitter.off(events['connection-close'], onConnetionClose);\n      eventEmitter.off(events['switch-meeting'], onSwitchMeeting);\n      eventEmitter.off(events['error'], onError);\n      eventEmitter.off(events['hls-started'], onHlsStarted);\n      eventEmitter.off(events['hls-stopped'], onHlsStopped);\n      eventEmitter.off(events['recording-state-changed'], onRecordingStateChanged);\n      eventEmitter.off(events['livestream-state-changed'], onLivestreamStateChanged);\n    };\n  }, []);\n  return useContext(MeetingProviderContex);\n};\n\nvar MeetingConsumer = function MeetingConsumer(_ref2) {\n  var children = _ref2.children,\n      _ref2$onParticipantJo = _ref2.onParticipantJoined,\n      onParticipantJoined = _ref2$onParticipantJo === void 0 ? function () {} : _ref2$onParticipantJo,\n      _ref2$onParticipantLe = _ref2.onParticipantLeft,\n      onParticipantLeft = _ref2$onParticipantLe === void 0 ? function () {} : _ref2$onParticipantLe,\n      _ref2$onSpeakerChange = _ref2.onSpeakerChanged,\n      onSpeakerChanged = _ref2$onSpeakerChange === void 0 ? function () {} : _ref2$onSpeakerChange,\n      _ref2$onPresenterChan = _ref2.onPresenterChanged,\n      onPresenterChanged = _ref2$onPresenterChan === void 0 ? function () {} : _ref2$onPresenterChan,\n      _ref2$onMainParticipa = _ref2.onMainParticipantChanged,\n      onMainParticipantChanged = _ref2$onMainParticipa === void 0 ? function () {} : _ref2$onMainParticipa,\n      _ref2$onEntryRequeste = _ref2.onEntryRequested,\n      onEntryRequested = _ref2$onEntryRequeste === void 0 ? function () {} : _ref2$onEntryRequeste,\n      _ref2$onEntryResponde = _ref2.onEntryResponded,\n      onEntryResponded = _ref2$onEntryResponde === void 0 ? function () {} : _ref2$onEntryResponde,\n      _ref2$onRecordingStar = _ref2.onRecordingStarted,\n      onRecordingStarted = _ref2$onRecordingStar === void 0 ? function () {} : _ref2$onRecordingStar,\n      _ref2$onRecordingStop = _ref2.onRecordingStopped,\n      onRecordingStopped = _ref2$onRecordingStop === void 0 ? function () {} : _ref2$onRecordingStop,\n      _ref2$onChatMessage = _ref2.onChatMessage,\n      onChatMessage = _ref2$onChatMessage === void 0 ? function () {} : _ref2$onChatMessage,\n      _ref2$onMeetingJoined = _ref2.onMeetingJoined,\n      onMeetingJoined = _ref2$onMeetingJoined === void 0 ? function () {} : _ref2$onMeetingJoined,\n      _ref2$onMeetingLeft = _ref2.onMeetingLeft,\n      onMeetingLeft = _ref2$onMeetingLeft === void 0 ? function () {} : _ref2$onMeetingLeft,\n      _ref2$onLiveStreamSta = _ref2.onLiveStreamStarted,\n      onLiveStreamStarted = _ref2$onLiveStreamSta === void 0 ? function () {} : _ref2$onLiveStreamSta,\n      _ref2$onLiveStreamSto = _ref2.onLiveStreamStopped,\n      onLiveStreamStopped = _ref2$onLiveStreamSto === void 0 ? function () {} : _ref2$onLiveStreamSto,\n      _ref2$onVideoStateCha = _ref2.onVideoStateChanged,\n      onVideoStateChanged = _ref2$onVideoStateCha === void 0 ? function () {} : _ref2$onVideoStateCha,\n      _ref2$onVideoSeeked = _ref2.onVideoSeeked,\n      onVideoSeeked = _ref2$onVideoSeeked === void 0 ? function () {} : _ref2$onVideoSeeked,\n      _ref2$onWebcamRequest = _ref2.onWebcamRequested,\n      onWebcamRequested = _ref2$onWebcamRequest === void 0 ? function () {} : _ref2$onWebcamRequest,\n      _ref2$onMicRequested = _ref2.onMicRequested,\n      onMicRequested = _ref2$onMicRequested === void 0 ? function () {} : _ref2$onMicRequested,\n      _ref2$onPinStateChang = _ref2.onPinStateChanged,\n      onPinStateChanged = _ref2$onPinStateChang === void 0 ? function () {} : _ref2$onPinStateChang,\n      _ref2$onConnectionOpe = _ref2.onConnectionOpen,\n      onConnectionOpen = _ref2$onConnectionOpe === void 0 ? function () {} : _ref2$onConnectionOpe,\n      _ref2$onConnetionClos = _ref2.onConnetionClose,\n      onConnetionClose = _ref2$onConnetionClos === void 0 ? function () {} : _ref2$onConnetionClos,\n      _ref2$onSwitchMeeting = _ref2.onSwitchMeeting,\n      onSwitchMeeting = _ref2$onSwitchMeeting === void 0 ? function () {} : _ref2$onSwitchMeeting,\n      _ref2$onError = _ref2.onError,\n      onError = _ref2$onError === void 0 ? function () {} : _ref2$onError,\n      _ref2$onHlsStarted = _ref2.onHlsStarted,\n      onHlsStarted = _ref2$onHlsStarted === void 0 ? function () {} : _ref2$onHlsStarted,\n      _ref2$onHlsStopped = _ref2.onHlsStopped,\n      onHlsStopped = _ref2$onHlsStopped === void 0 ? function () {} : _ref2$onHlsStopped,\n      _ref2$onRecordingStat = _ref2.onRecordingStateChanged,\n      onRecordingStateChanged = _ref2$onRecordingStat === void 0 ? function () {} : _ref2$onRecordingStat,\n      _ref2$onLivestreamSta = _ref2.onLivestreamStateChanged,\n      onLivestreamStateChanged = _ref2$onLivestreamSta === void 0 ? function () {} : _ref2$onLivestreamSta,\n      _ref2$onMeetingStateC = _ref2.onMeetingStateChanged,\n      onMeetingStateChanged = _ref2$onMeetingStateC === void 0 ? function () {} : _ref2$onMeetingStateC;\n  useEffect(function () {\n    eventEmitter.on(events['meeting-state-changed'], onMeetingStateChanged);\n    eventEmitter.on(events['participant-joined'], onParticipantJoined);\n    eventEmitter.on(events['participant-left'], onParticipantLeft);\n    eventEmitter.on(events['speaker-changed'], onSpeakerChanged);\n    eventEmitter.on(events['presenter-changed'], onPresenterChanged);\n    eventEmitter.on(events['main-participant-changed'], onMainParticipantChanged);\n    eventEmitter.on(events['entry-requested'], onEntryRequested);\n    eventEmitter.on(events['entry-responded'], onEntryResponded);\n    eventEmitter.on(events['recording-started'], onRecordingStarted);\n    eventEmitter.on(events['recording-stopped'], onRecordingStopped);\n    eventEmitter.on(events['chat-message'], onChatMessage);\n    eventEmitter.on(events['meeting-joined'], onMeetingJoined);\n    eventEmitter.on(events['meeting-left'], onMeetingLeft);\n    eventEmitter.on(events['live-stream-enabled'], onLiveStreamStarted);\n    eventEmitter.on(events['live-stream-disabled'], onLiveStreamStopped);\n    eventEmitter.on(events['video-state-changed'], onVideoStateChanged);\n    eventEmitter.on(events['video-seeked'], onVideoSeeked);\n    eventEmitter.on(events['webcam-requested'], onWebcamRequested);\n    eventEmitter.on(events['mic-requested'], onMicRequested);\n    eventEmitter.on(events['pin-state-changed'], onPinStateChanged);\n    eventEmitter.on(events['connection-open'], onConnectionOpen);\n    eventEmitter.on(events['connection-close'], onConnetionClose);\n    eventEmitter.on(events['switch-meeting'], onSwitchMeeting);\n    eventEmitter.on(events['error'], onError);\n    eventEmitter.on(events['hls-started'], onHlsStarted);\n    eventEmitter.on(events['hls-stopped'], onHlsStopped);\n    eventEmitter.on(events['recording-state-changed'], onRecordingStateChanged);\n    eventEmitter.on(events['livestream-state-changed'], onLivestreamStateChanged);\n    return function () {\n      eventEmitter.off(events['meeting-state-changed'], onMeetingStateChanged);\n      eventEmitter.off(events['participant-joined'], onParticipantJoined);\n      eventEmitter.off(events['participant-left'], onParticipantLeft);\n      eventEmitter.off(events['speaker-changed'], onSpeakerChanged);\n      eventEmitter.off(events['presenter-changed'], onPresenterChanged);\n      eventEmitter.off(events['main-participant-changed'], onMainParticipantChanged);\n      eventEmitter.off(events['entry-requested'], onEntryRequested);\n      eventEmitter.off(events['entry-responded'], onEntryResponded);\n      eventEmitter.off(events['recording-started'], onRecordingStarted);\n      eventEmitter.off(events['recording-stopped'], onRecordingStopped);\n      eventEmitter.off(events['chat-message'], onChatMessage);\n      eventEmitter.off(events['meeting-joined'], onMeetingJoined);\n      eventEmitter.off(events['meeting-left'], onMeetingLeft);\n      eventEmitter.off(events['live-stream-enabled'], onLiveStreamStarted);\n      eventEmitter.off(events['live-stream-disabled'], onLiveStreamStopped);\n      eventEmitter.off(events['video-state-changed'], onVideoStateChanged);\n      eventEmitter.off(events['video-seeked'], onVideoSeeked);\n      eventEmitter.off(events['webcam-requested'], onWebcamRequested);\n      eventEmitter.off(events['mic-requested'], onMicRequested);\n      eventEmitter.off(events['pin-state-changed'], onPinStateChanged);\n      eventEmitter.off(events['connection-open'], onConnectionOpen);\n      eventEmitter.off(events['connection-close'], onConnetionClose);\n      eventEmitter.off(events['switch-meeting'], onSwitchMeeting);\n      eventEmitter.off(events['error'], onError);\n      eventEmitter.off(events['hls-started'], onHlsStarted);\n      eventEmitter.off(events['hls-stopped'], onHlsStopped);\n      eventEmitter.off(events['recording-state-changed'], onRecordingStateChanged);\n      eventEmitter.off(events['livestream-state-changed'], onLivestreamStateChanged);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MeetingProviderContex.Consumer, null, children));\n};\n\nvar version = \"0.1.43\";\n\nvar MeetingProvider = function MeetingProvider(_ref) {\n  var children = _ref.children,\n      config = _ref.config,\n      token = _ref.token,\n      joinWithoutUserInteraction = _ref.joinWithoutUserInteraction,\n      _reinitialiseMeetingOnConfigChange = _ref.reinitialiseMeetingOnConfigChange,\n      deviceInfo = _ref.deviceInfo;\n\n  var _useState = useState(null),\n      meeting = _useState[0],\n      setMeeting = _useState[1];\n\n  var _useState2 = useState(null),\n      localParticipant = _useState2[0],\n      setLocalParticipant = _useState2[1];\n\n  var _useState3 = useState(null),\n      mainParticipant = _useState3[0],\n      setMainParticipant = _useState3[1];\n\n  var _useState4 = useState(null),\n      activeSpeakerId = _useState4[0],\n      setActiveSpeakerId = _useState4[1];\n\n  var _useState5 = useState(null),\n      presenterId = _useState5[0],\n      setPresenterId = _useState5[1];\n\n  var _useState6 = useState(false),\n      localMicOn = _useState6[0],\n      setLocalMicOn = _useState6[1];\n\n  var _useState7 = useState(false),\n      localWebcamOn = _useState7[0],\n      setLocalWebcamOn = _useState7[1];\n\n  var _useState8 = useState(false),\n      localScreenShareOn = _useState8[0],\n      setLocalScreenShareOn = _useState8[1];\n\n  var _useState9 = useState(false),\n      isRecording = _useState9[0],\n      setIsRecording = _useState9[1];\n\n  var _useState10 = useState([]),\n      messages = _useState10[0],\n      setMessages = _useState10[1];\n\n  var _useState11 = useState(new Map()),\n      participants = _useState11[0],\n      setParticipants = _useState11[1];\n\n  var _useState12 = useState(new Map()),\n      pinnedParticipants = _useState12[0],\n      setPinnedParticipants = _useState12[1];\n\n  var _useState13 = useState(false),\n      isLiveStreaming = _useState13[0],\n      setIsLiveStreaming = _useState13[1];\n\n  var _useState14 = useState(new Map()),\n      connections = _useState14[0],\n      setConnections = _useState14[1];\n\n  var _useState15 = useState(false),\n      isMeetingJoined = _useState15[0],\n      setIsMeetingJoined = _useState15[1];\n\n  var _useState16 = useState(false),\n      isHls = _useState16[0],\n      setIsHls = _useState16[1];\n\n  var _useState17 = useState(null),\n      recordingState = _useState17[0],\n      setRecordingState = _useState17[1];\n\n  var _useState18 = useState(null),\n      livestreamState = _useState18[0],\n      setLivestreamState = _useState18[1];\n\n  var meetingRef = useRef();\n  var localMicOnRef = useRef();\n  var localWebcamOnRef = useRef();\n  var localScreenShareOnRef = useRef();\n  var isRecordingRef = useRef();\n  var configRef = useRef(config);\n  var tokenRef = useRef(token);\n  var joinedOnFirstRender = useRef(false);\n  var isHlsRef = useRef();\n  var reinitialiseMeetingOnConfigChange = useMemo(function () {\n    return _reinitialiseMeetingOnConfigChange;\n  }, []);\n  useEffect(function () {\n    meetingRef.current = meeting;\n  }, [meeting]);\n  useEffect(function () {\n    localMicOnRef.current = localMicOn;\n  }, [localMicOn]);\n  useEffect(function () {\n    localWebcamOnRef.current = localWebcamOn;\n  }, [localWebcamOn]);\n  useEffect(function () {\n    localScreenShareOnRef.current = localScreenShareOn;\n  }, [localScreenShareOn]);\n  useEffect(function () {\n    isRecordingRef.current = isRecording;\n  }, [isRecording]);\n  useEffect(function () {\n    configRef.current = config;\n  }, [config]);\n  useEffect(function () {\n    tokenRef.current = token;\n  }, [token]);\n  useEffect(function () {\n    isHlsRef.current = isHls;\n  }, [isHls]);\n\n  var resetStates = function resetStates() {\n    setMeeting(null);\n    setLocalParticipant(null);\n    setMainParticipant(null);\n    setActiveSpeakerId(null);\n    setPresenterId(null);\n    setLocalMicOn(false);\n    setLocalWebcamOn(false);\n    setLocalScreenShareOn(false);\n    setIsRecording(false);\n    setMessages([]);\n    setIsLiveStreaming(false);\n    setParticipants(new Map());\n    setPinnedParticipants(new Map());\n    setConnections(new Map());\n    setIsMeetingJoined(false);\n    setIsHls(false);\n    setRecordingState(null);\n    setLivestreamState(null);\n  };\n\n  var _handle_participant_joined = function _handle_participant_joined(participant) {\n    setParticipants(function (participants) {\n      participants.set(participant.id, participant);\n      var participantsToSet = new Map(participants);\n      return participantsToSet;\n    });\n    eventEmitter.emit(events['participant-joined'], participant);\n  };\n\n  var _handle_participant_left = function _handle_participant_left(participant) {\n    setParticipants(function (participants) {\n      participants[\"delete\"](participant.id);\n      var newParticipants = new Map(participants);\n      return newParticipants;\n    });\n    eventEmitter.emit(events['participant-left'], participant);\n  };\n\n  var _handle_presenter_changed = function _handle_presenter_changed(presenterId) {\n    var _meetingRef$current, _meetingRef$current$l;\n\n    setPresenterId(presenterId);\n    setLocalScreenShareOn(presenterId === (meetingRef === null || meetingRef === void 0 ? void 0 : (_meetingRef$current = meetingRef.current) === null || _meetingRef$current === void 0 ? void 0 : (_meetingRef$current$l = _meetingRef$current.localParticipant) === null || _meetingRef$current$l === void 0 ? void 0 : _meetingRef$current$l.id));\n    eventEmitter.emit(events['presenter-changed'], presenterId);\n  };\n\n  var _handle_main_participant_changed = function _handle_main_participant_changed(participant) {\n    setMainParticipant(participant);\n    eventEmitter.emit(events['main-participant-changed'], participant);\n  };\n\n  var _handle_speaker_changed = function _handle_speaker_changed(activeSpeakerId) {\n    setActiveSpeakerId(activeSpeakerId);\n    eventEmitter.emit(events['speaker-changed'], activeSpeakerId);\n  };\n\n  var _handle_chat_message = function _handle_chat_message(data) {\n    setMessages(function (s) {\n      return [].concat(s, [data]);\n    });\n    eventEmitter.emit(events['chat-message'], data);\n  };\n\n  var _handle_entry_requested = function _handle_entry_requested(data) {\n    eventEmitter.emit(events['entry-requested'], data);\n  };\n\n  var _handle_entry_responded = function _handle_entry_responded(participantId, decision) {\n    eventEmitter.emit(events['entry-responded'], participantId, decision);\n  };\n\n  var _handle_recording_started = function _handle_recording_started() {\n    setIsRecording(true);\n    eventEmitter.emit(events['recording-started']);\n  };\n\n  var _handle_recording_stopped = function _handle_recording_stopped() {\n    setIsRecording(false);\n    eventEmitter.emit(events['recording-stopped']);\n  };\n\n  var _handle_localParticipant_stream_enabled = function _handle_localParticipant_stream_enabled(stream) {\n    if (stream.track.readyState === 'live') {\n      if (stream.kind === 'video') {\n        setLocalWebcamOn(true);\n      } else if (stream.kind === 'audio') {\n        setLocalMicOn(true);\n      }\n    }\n  };\n\n  var _handle_localParticipant_stream_disabled = function _handle_localParticipant_stream_disabled(stream) {\n    if (stream.track.readyState === 'ended') {\n      if (stream.kind === 'video') {\n        setLocalWebcamOn(false);\n      } else if (stream.kind === 'audio') {\n        setLocalMicOn(false);\n      }\n    }\n  };\n\n  var _handle_live_stream_started = function _handle_live_stream_started(data) {\n    setIsLiveStreaming(true);\n    eventEmitter.emit(events['live-stream-started'], data);\n  };\n\n  var _handle_live_stream_stopped = function _handle_live_stream_stopped() {\n    setIsLiveStreaming(false);\n    eventEmitter.emit(events['live-stream-stopped']);\n  };\n\n  var _handle_hls_started = function _handle_hls_started(data) {\n    setIsHls(true);\n    eventEmitter.emit(events['hls-started'], data);\n  };\n\n  var _handle_hls_stopped = function _handle_hls_stopped() {\n    setIsHls(false);\n    eventEmitter.emit(events['hls-stopped']);\n  };\n\n  var _handle_video_state_changed = function _handle_video_state_changed(data) {\n    eventEmitter.emit(events['video-state-changed'], data);\n  };\n\n  var _handle_video_seeked = function _handle_video_seeked(data) {\n    eventEmitter.emit(events['video-seeked'], data);\n  };\n\n  var _handle_webcam_requested = function _handle_webcam_requested(data) {\n    eventEmitter.emit(events['webcam-requested'], data);\n  };\n\n  var _handle_mic_requested = function _handle_mic_requested(data) {\n    eventEmitter.emit(events['mic-requested'], data);\n  };\n\n  var _handle_meeting_joined = function _handle_meeting_joined(data) {\n    joinedOnFirstRender.current = true;\n    setMessages(function (s) {\n      return [].concat(s, data.messages);\n    });\n    eventEmitter.emit(events['meeting-joined'], data);\n    setIsMeetingJoined(true);\n  };\n\n  var _handle_meeting_left = function _handle_meeting_left() {\n    eventEmitter.emit(events['meeting-left']);\n    var meeting = meetingRef.current;\n\n    if (meeting) {\n      var _meeting$localPartici;\n\n      if (typeof (meeting === null || meeting === void 0 ? void 0 : meeting.off) === 'function') {\n        meeting.off('meeting-state-changed', _handle_meeting_state_changed);\n        meeting.off('participant-joined', _handle_participant_joined);\n        meeting.off('participant-left', _handle_participant_left);\n        meeting.off('presenter-changed', _handle_presenter_changed);\n        meeting.off('main-participant-changed', _handle_main_participant_changed);\n        meeting.off('speaker-changed', _handle_speaker_changed);\n        meeting.off('entry-requested', _handle_entry_requested);\n        meeting.off('entry-responded', _handle_entry_responded);\n        meeting.off('chat-message', _handle_chat_message);\n        meeting.off('recording-started', _handle_recording_started);\n        meeting.off('recording-stopped', _handle_recording_stopped);\n        meeting.off('meeting-joined', _handle_meeting_joined);\n        meeting.off('meeting-left', _handle_meeting_left);\n        meeting.off('livestream-started', _handle_live_stream_started);\n        meeting.off('livestream-stopped', _handle_live_stream_stopped);\n        meeting.off('video-state-changed', _handle_video_state_changed);\n        meeting.off('video-seeked', _handle_video_seeked);\n        meeting.off('webcam-requested', _handle_webcam_requested);\n        meeting.off('mic-requested', _handle_mic_requested);\n        meeting.off('pin-state-changed', _handle_pin_state_changed);\n        meeting.off('connection-open', _handle_connection_open);\n        meeting.off('connection-close', _handle_connection_close);\n        meeting.off('switch-meeting', _handle_switch_meeting);\n        meeting.off('error', _handle_error);\n        meeting.off('hls-started', _handle_hls_started);\n        meeting.off('hls-stopped', _handle_hls_stopped);\n        meeting.off('recording-state-changed', _handle_recording_state_changed);\n        meeting.off('livestream-state-changed', _handle_livestream_state_changed);\n      }\n\n      if (typeof (meeting === null || meeting === void 0 ? void 0 : (_meeting$localPartici = meeting.localParticipant) === null || _meeting$localPartici === void 0 ? void 0 : _meeting$localPartici.off) === 'function') {\n        meeting.localParticipant.off('stream-enabled', _handle_localParticipant_stream_enabled);\n        meeting.localParticipant.off('stream-disabled', _handle_localParticipant_stream_disabled);\n      }\n\n      resetStates();\n    }\n  };\n\n  var _handle_pin_state_changed = function _handle_pin_state_changed(_ref2) {\n    var participantId = _ref2.participantId,\n        state = _ref2.state,\n        pinnedBy = _ref2.pinnedBy;\n    setPinnedParticipants(function (pinnedParticipants) {\n      if (!state.cam && !state.share) {\n        pinnedParticipants[\"delete\"](participantId);\n      } else {\n        pinnedParticipants.set(participantId, state);\n      }\n\n      var pinnedParticipantsToSet = new Map(pinnedParticipants);\n      return pinnedParticipantsToSet;\n    });\n    eventEmitter.emit(events['pin-state-changed'], {\n      participantId: participantId,\n      state: state,\n      pinnedBy: pinnedBy\n    });\n  };\n\n  var _handle_connection_open = function _handle_connection_open(connection) {\n    setConnections(function (s) {\n      s.set(connection.id, connection);\n      var connectionsToSet = new Map(s);\n      return connectionsToSet;\n    });\n    eventEmitter.emit(events['connection-open'], connection);\n  };\n\n  var _handle_connection_close = function _handle_connection_close(connectionId) {\n    setConnections(function (s) {\n      s[\"delete\"](connectionId);\n      var newConnections = new Map(s);\n      return newConnections;\n    });\n    eventEmitter.emit(events['connection-close'], connectionId);\n  };\n\n  var _handle_switch_meeting = function _handle_switch_meeting(d) {\n    eventEmitter.emit(events['switch-meeting'], d);\n  };\n\n  var _handle_error = function _handle_error(data) {\n    eventEmitter.emit(events['error'], data);\n  };\n\n  var _handle_recording_state_changed = function _handle_recording_state_changed(data) {\n    setRecordingState(data === null || data === void 0 ? void 0 : data.status);\n    eventEmitter.emit(events['recording-state-changed'], data);\n  };\n\n  var _handle_livestream_state_changed = function _handle_livestream_state_changed(data) {\n    setLivestreamState(data === null || data === void 0 ? void 0 : data.status);\n    eventEmitter.emit(events['livestream-state-changed'], data);\n  };\n\n  var _handle_meeting_state_changed = function _handle_meeting_state_changed(data) {\n    eventEmitter.emit(events['meeting-state-changed'], data);\n  };\n\n  var join = function join() {\n    var meeting = VideoSDK && VideoSDK.initMeeting(configRef.current);\n    setMeeting(meeting);\n    var localParticipant = meeting.localParticipant,\n        participants = meeting.participants;\n    participants.set(localParticipant.id, localParticipant);\n    setParticipants(participants);\n    setLocalParticipant(localParticipant);\n    meeting.on('meeting-state-changed', _handle_meeting_state_changed);\n    meeting.on('participant-joined', _handle_participant_joined);\n    meeting.on('participant-left', _handle_participant_left);\n    meeting.on('presenter-changed', _handle_presenter_changed);\n    meeting.on('main-participant-changed', _handle_main_participant_changed);\n    meeting.on('speaker-changed', _handle_speaker_changed);\n    meeting.on('entry-requested', _handle_entry_requested);\n    meeting.on('entry-responded', _handle_entry_responded);\n    meeting.on('chat-message', _handle_chat_message);\n    meeting.on('recording-started', _handle_recording_started);\n    meeting.on('recording-stopped', _handle_recording_stopped);\n    meeting.on('meeting-joined', _handle_meeting_joined);\n    meeting.on('meeting-left', _handle_meeting_left);\n    meeting.on('livestream-started', _handle_live_stream_started);\n    meeting.on('livestream-stopped', _handle_live_stream_stopped);\n    meeting.on('video-state-changed', _handle_video_state_changed);\n    meeting.on('video-seeked', _handle_video_seeked);\n    meeting.on('webcam-requested', _handle_webcam_requested);\n    meeting.on('mic-requested', _handle_mic_requested);\n    meeting.on('pin-state-changed', _handle_pin_state_changed);\n    meeting.on('connection-open', _handle_connection_open);\n    meeting.on('connection-close', _handle_connection_close);\n    meeting.on('switch-meeting', _handle_switch_meeting);\n    meeting.on('error', _handle_error);\n    meeting.on('hls-started', _handle_hls_started);\n    meeting.on('hls-stopped', _handle_hls_stopped);\n    meeting.on('recording-state-changed', _handle_recording_state_changed);\n    meeting.on('livestream-state-changed', _handle_livestream_state_changed);\n    meeting.localParticipant.on('stream-enabled', _handle_localParticipant_stream_enabled);\n    meeting.localParticipant.on('stream-disabled', _handle_localParticipant_stream_disabled);\n    meeting.join();\n  };\n\n  var leave = function leave() {\n    var meeting = meetingRef.current;\n\n    if (meeting) {\n      meeting.leave();\n    }\n  };\n\n  var end = function end() {\n    var meeting = meetingRef.current;\n\n    if (meeting) {\n      meeting.end();\n    }\n  };\n\n  var startRecording = function startRecording(webhookUrl, awsDirPath, config) {\n    var meeting = meetingRef.current;\n\n    if (meeting) {\n      meeting.startRecording(webhookUrl, awsDirPath, config);\n    }\n  };\n\n  var stopRecording = function stopRecording() {\n    var meeting = meetingRef.current;\n\n    if (meeting) {\n      var _isRecording = isRecordingRef.current;\n\n      if (_isRecording) {\n        meeting.stopRecording();\n      }\n    }\n  };\n\n  var unmuteMic = function unmuteMic(customAudioTrack) {\n    if (customAudioTrack === void 0) {\n      customAudioTrack = undefined;\n    }\n\n    var meeting = meetingRef.current;\n\n    if (meeting) {\n      meeting.unmuteMic(customAudioTrack);\n    }\n  };\n\n  var muteMic = function muteMic() {\n    var meeting = meetingRef.current;\n\n    if (meeting) {\n      meeting.muteMic();\n    }\n  };\n\n  var toggleMic = function toggleMic(customAudioTrack) {\n    if (customAudioTrack === void 0) {\n      customAudioTrack = undefined;\n    }\n\n    var localMicOn = localMicOnRef.current;\n\n    if (localMicOn) {\n      muteMic();\n    } else {\n      unmuteMic(customAudioTrack);\n    }\n  };\n\n  var disableWebcam = function disableWebcam() {\n    var meeting = meetingRef.current;\n\n    if (meeting) {\n      meeting.disableWebcam();\n    }\n  };\n\n  var enableWebcam = function enableWebcam(customVideoTrack) {\n    if (customVideoTrack === void 0) {\n      customVideoTrack = undefined;\n    }\n\n    var meeting = meetingRef.current;\n\n    if (meeting) {\n      meeting.enableWebcam(customVideoTrack);\n    }\n  };\n\n  var toggleWebcam = function toggleWebcam(customVideoTrack) {\n    if (customVideoTrack === void 0) {\n      customVideoTrack = undefined;\n    }\n\n    var localWebcamOn = localWebcamOnRef.current;\n\n    if (localWebcamOn) {\n      disableWebcam();\n    } else {\n      enableWebcam(customVideoTrack);\n    }\n  };\n\n  var disableScreenShare = function disableScreenShare() {\n    var meeting = meetingRef.current;\n\n    if (meeting) {\n      meeting.disableScreenShare();\n    }\n  };\n\n  var enableScreenShare = function enableScreenShare(customScreenShareTrack) {\n    if (customScreenShareTrack === void 0) {\n      customScreenShareTrack = undefined;\n    }\n\n    var meeting = meetingRef.current;\n\n    if (meeting) {\n      meeting.enableScreenShare(customScreenShareTrack);\n    }\n  };\n\n  var toggleScreenShare = function toggleScreenShare(customScreenShareTrack) {\n    if (customScreenShareTrack === void 0) {\n      customScreenShareTrack = undefined;\n    }\n\n    var localScreenShareOn = localScreenShareOnRef.current;\n\n    if (localScreenShareOn) {\n      disableScreenShare();\n    } else {\n      enableScreenShare(customScreenShareTrack);\n    }\n  };\n\n  var sendChatMessage = function sendChatMessage(text) {\n    var meeting = meetingRef.current;\n\n    if (meeting) {\n      meeting.sendChatMessage(text);\n    }\n  };\n\n  var respondEntry = function respondEntry(participantId, decision) {\n    var meeting = meetingRef.current;\n\n    if (meeting) {\n      meeting.respondEntry(participantId, decision);\n    }\n  };\n\n  var getMics = function getMics() {\n    try {\n      var _meeting = meetingRef.current;\n      return Promise.resolve(function () {\n        if (_meeting) {\n          return Promise.resolve(_meeting.getMics());\n        }\n      }());\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  var getWebcams = function getWebcams() {\n    try {\n      var _meeting2 = meetingRef.current;\n      return Promise.resolve(function () {\n        if (_meeting2) {\n          return Promise.resolve(_meeting2.getWebcams());\n        }\n      }());\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  var changeWebcam = function changeWebcam(obj) {\n    var meeting = meetingRef.current;\n\n    if (meeting) {\n      meeting.changeWebcam(obj);\n    }\n  };\n\n  var changeMic = function changeMic(obj) {\n    var meeting = meetingRef.current;\n\n    if (meeting) {\n      meeting.changeMic(obj);\n    }\n  };\n\n  var startVideo = function startVideo(_ref3) {\n    var link = _ref3.link;\n    var meeting = meetingRef.current;\n\n    if (meeting) {\n      meeting.startVideo({\n        link: link\n      });\n    }\n  };\n\n  var stopVideo = function stopVideo() {\n    var meeting = meetingRef.current;\n\n    if (meeting) {\n      meeting.stopVideo();\n    }\n  };\n\n  var resumeVideo = function resumeVideo() {\n    var meeting = meetingRef.current;\n\n    if (meeting) {\n      meeting.resumeVideo();\n    }\n  };\n\n  var pauseVideo = function pauseVideo(_ref4) {\n    var currentTime = _ref4.currentTime;\n    var meeting = meetingRef.current;\n\n    if (meeting) {\n      meeting.pauseVideo({\n        currentTime: currentTime\n      });\n    }\n  };\n\n  var seekVideo = function seekVideo(_ref5) {\n    var currentTime = _ref5.currentTime;\n    var meeting = meetingRef.current;\n\n    if (meeting) {\n      meeting.seekVideo({\n        currentTime: currentTime\n      });\n    }\n  };\n\n  var startLivestream = function startLivestream(streamInfo, config) {\n    var meeting = meetingRef.current;\n\n    if (meeting) {\n      meeting.startLivestream(streamInfo, config);\n    }\n  };\n\n  var stopLivestream = function stopLivestream() {\n    var meeting = meetingRef.current;\n\n    if (meeting) {\n      meeting.stopLivestream();\n    }\n  };\n\n  var connectTo = function connectTo(_ref6) {\n    var meetingId = _ref6.meetingId,\n        payload = _ref6.payload;\n\n    try {\n      var _meeting3 = meetingRef.current;\n\n      var _temp2 = function () {\n        if (_meeting3) {\n          return Promise.resolve(_meeting3.connectTo({\n            meetingId: meetingId,\n            payload: payload\n          })).then(function () {});\n        }\n      }();\n\n      return Promise.resolve(_temp2 && _temp2.then ? _temp2.then(function () {}) : void 0);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  var startHls = function startHls(config) {\n    var meeting = meetingRef.current;\n\n    if (meeting) {\n      meeting.startHls(config);\n    }\n  };\n\n  var stopHls = function stopHls() {\n    var meeting = meetingRef.current;\n\n    if (meeting) {\n      meeting.stopHls();\n    }\n  };\n\n  var initSDK = function initSDK() {\n    VideoSDK.config(tokenRef.current);\n\n    if (deviceInfo) {\n      VideoSDK.analytics(deviceInfo);\n    } else {\n      VideoSDK.analytics({\n        sdkType: 'react-web',\n        sdkVersion: version\n      });\n    }\n\n    if (joinWithoutUserInteraction) {\n      join();\n    }\n  };\n\n  useEffect(function () {\n    initSDK();\n  }, []);\n  useEffect(function () {\n    if (reinitialiseMeetingOnConfigChange && joinedOnFirstRender.current) {\n      leave();\n      initSDK();\n      !joinWithoutUserInteraction && join();\n    }\n  }, [config.meetingId, token, reinitialiseMeetingOnConfigChange]);\n  return /*#__PURE__*/React.createElement(MeetingProviderContex.Provider, {\n    value: {\n      meetingId: meeting === null || meeting === void 0 ? void 0 : meeting.id,\n      meeting: meeting,\n      baseUrl: meeting === null || meeting === void 0 ? void 0 : meeting.baseUrl,\n      localParticipant: localParticipant,\n      mainParticipant: mainParticipant,\n      activeSpeakerId: activeSpeakerId,\n      participants: participants,\n      presenterId: presenterId,\n      localMicOn: localMicOn,\n      localWebcamOn: localWebcamOn,\n      localScreenShareOn: localScreenShareOn,\n      messages: messages,\n      isRecording: isRecording,\n      isLiveStreaming: isLiveStreaming,\n      pinnedParticipants: pinnedParticipants,\n      connections: connections,\n      isHls: isHls,\n      recordingState: recordingState,\n      livestreamState: livestreamState,\n      isMeetingJoined: isMeetingJoined,\n      join: join,\n      leave: leave,\n      end: end,\n      startRecording: startRecording,\n      stopRecording: stopRecording,\n      sendChatMessage: sendChatMessage,\n      respondEntry: respondEntry,\n      muteMic: muteMic,\n      unmuteMic: unmuteMic,\n      toggleMic: toggleMic,\n      disableWebcam: disableWebcam,\n      enableWebcam: enableWebcam,\n      toggleWebcam: toggleWebcam,\n      disableScreenShare: disableScreenShare,\n      enableScreenShare: enableScreenShare,\n      toggleScreenShare: toggleScreenShare,\n      getMics: getMics,\n      getWebcams: getWebcams,\n      changeWebcam: changeWebcam,\n      changeMic: changeMic,\n      startVideo: startVideo,\n      stopVideo: stopVideo,\n      resumeVideo: resumeVideo,\n      pauseVideo: pauseVideo,\n      seekVideo: seekVideo,\n      startLivestream: startLivestream,\n      stopLivestream: stopLivestream,\n      connectTo: connectTo,\n      startHls: startHls,\n      stopHls: stopHls\n    }\n  }, children);\n};\n\nvar useParticipant = function useParticipant(participantId, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$onStreamEnabled = _ref.onStreamEnabled,\n      onStreamEnabled = _ref$onStreamEnabled === void 0 ? function () {} : _ref$onStreamEnabled,\n      _ref$onStreamDisabled = _ref.onStreamDisabled,\n      onStreamDisabled = _ref$onStreamDisabled === void 0 ? function () {} : _ref$onStreamDisabled,\n      _ref$onMediaStatusCha = _ref.onMediaStatusChanged,\n      onMediaStatusChanged = _ref$onMediaStatusCha === void 0 ? function () {} : _ref$onMediaStatusCha;\n\n  var _useState = useState(null),\n      webcamStream = _useState[0],\n      setwebcamStream = _useState[1];\n\n  var _useState2 = useState(null),\n      micStream = _useState2[0],\n      setMicStream = _useState2[1];\n\n  var _useState3 = useState(null),\n      screenShareStream = _useState3[0],\n      setScreenShareStream = _useState3[1];\n\n  var meeting = useMeeting();\n\n  var _useMemo = useMemo(function () {\n    var _meeting$pinnedPartic;\n\n    var participants = meeting === null || meeting === void 0 ? void 0 : meeting.participants;\n    var localParticipant = meeting === null || meeting === void 0 ? void 0 : meeting.localParticipant;\n    var activeSpeakerId = meeting === null || meeting === void 0 ? void 0 : meeting.activeSpeakerId;\n    var mainParticipant = meeting === null || meeting === void 0 ? void 0 : meeting.mainParticipant;\n    var pinState = (meeting === null || meeting === void 0 ? void 0 : (_meeting$pinnedPartic = meeting.pinnedParticipants) === null || _meeting$pinnedPartic === void 0 ? void 0 : _meeting$pinnedPartic.get(participantId)) || {\n      cam: false,\n      share: false\n    };\n    return {\n      participants: participants,\n      localParticipant: localParticipant,\n      activeSpeakerId: activeSpeakerId,\n      mainParticipant: mainParticipant,\n      pinState: pinState\n    };\n  }, [meeting]),\n      participants = _useMemo.participants,\n      localParticipant = _useMemo.localParticipant,\n      activeSpeakerId = _useMemo.activeSpeakerId,\n      mainParticipant = _useMemo.mainParticipant,\n      pinState = _useMemo.pinState;\n\n  var participant = participants === null || participants === void 0 ? void 0 : participants.get(participantId);\n\n  var _useState4 = useState(participant === null || participant === void 0 ? void 0 : participant.webcamOn),\n      webcamOn = _useState4[0],\n      setWebcamOn = _useState4[1];\n\n  var _useState5 = useState(participant === null || participant === void 0 ? void 0 : participant.micOn),\n      micOn = _useState5[0],\n      setMicOn = _useState5[1];\n\n  var setTrack = function setTrack(stream) {\n    if (stream.track.readyState === 'live') {\n      switch (stream.kind) {\n        case 'video':\n          setwebcamStream(stream);\n          break;\n\n        case 'audio':\n          setMicStream(stream);\n          break;\n\n        case 'share':\n          setScreenShareStream(stream);\n          break;\n      }\n    }\n  };\n\n  var unSetTrack = function unSetTrack(stream) {\n    if (stream.track.readyState !== 'live') {\n      switch (stream.kind) {\n        case 'video':\n          setwebcamStream(null);\n          break;\n\n        case 'audio':\n          setMicStream(null);\n          break;\n\n        case 'share':\n          setScreenShareStream(null);\n          break;\n      }\n    }\n  };\n\n  var _handleStreamEnabled = function _handleStreamEnabled(stream) {\n    setTrack(stream);\n    onStreamEnabled(stream);\n  };\n\n  var _handleStreamDisabled = function _handleStreamDisabled(stream) {\n    unSetTrack(stream);\n    onStreamDisabled(stream);\n  };\n\n  var _handleMediaStatusChanged = function _handleMediaStatusChanged(data) {\n    var kind = data.kind,\n        peerId = data.peerId,\n        newStatus = data.newStatus;\n\n    if (kind == 'audio') {\n      setMicOn(newStatus);\n    } else if (kind == 'video') {\n      setWebcamOn(newStatus);\n    }\n\n    onMediaStatusChanged({\n      kind: kind,\n      peerId: peerId,\n      newStatus: newStatus\n    });\n  };\n\n  var setQuality = function setQuality(quality) {\n    participant === null || participant === void 0 ? void 0 : participant.setQuality(quality);\n  };\n\n  var setViewPort = function setViewPort(width, height) {\n    participant === null || participant === void 0 ? void 0 : participant.setViewPort(width, height);\n  };\n\n  var enableMic = function enableMic() {\n    participant === null || participant === void 0 ? void 0 : participant.enableMic();\n  };\n\n  var disableMic = function disableMic() {\n    participant === null || participant === void 0 ? void 0 : participant.disableMic();\n  };\n\n  var enableWebcam = function enableWebcam() {\n    participant === null || participant === void 0 ? void 0 : participant.enableWebcam();\n  };\n\n  var disableWebcam = function disableWebcam() {\n    participant === null || participant === void 0 ? void 0 : participant.disableWebcam();\n  };\n\n  var pin = function pin(data) {\n    participant === null || participant === void 0 ? void 0 : participant.pin(data);\n  };\n\n  var unpin = function unpin(data) {\n    participant === null || participant === void 0 ? void 0 : participant.unpin(data);\n  };\n\n  var getAudioStats = function getAudioStats() {\n    return Promise.resolve(participant === null || participant === void 0 ? void 0 : participant.getAudioStats());\n  };\n\n  var getVideoStats = function getVideoStats() {\n    return Promise.resolve(participant === null || participant === void 0 ? void 0 : participant.getVideoStats());\n  };\n\n  var consumeWebcamStreams = function consumeWebcamStreams() {\n    participant === null || participant === void 0 ? void 0 : participant.consumeWebcamStreams();\n  };\n\n  var consumeMicStreams = function consumeMicStreams() {\n    participant === null || participant === void 0 ? void 0 : participant.consumeMicStreams();\n  };\n\n  var stopConsumingWebcamStreams = function stopConsumingWebcamStreams() {\n    participant === null || participant === void 0 ? void 0 : participant.stopConsumingWebcamStreams();\n  };\n\n  var stopConsumingMicStreams = function stopConsumingMicStreams() {\n    participant === null || participant === void 0 ? void 0 : participant.stopConsumingMicStreams();\n  };\n\n  var switchTo = function switchTo(data) {\n    return Promise.resolve(participant === null || participant === void 0 ? void 0 : participant.switchTo(data)).then(function () {});\n  };\n\n  useEffect(function () {\n    var streams = participant === null || participant === void 0 ? void 0 : participant.streams;\n\n    if (streams) {\n      streams.forEach(function (stream) {\n        setTrack(stream);\n      });\n    }\n\n    if (participant !== null && participant !== void 0 && participant.micOn) {\n      setMicOn(micOn);\n    }\n\n    if (participant !== null && participant !== void 0 && participant.webcamOn) {\n      setWebcamOn(webcamOn);\n    }\n\n    participant === null || participant === void 0 ? void 0 : participant.on('stream-enabled', _handleStreamEnabled);\n    participant === null || participant === void 0 ? void 0 : participant.on('stream-disabled', _handleStreamDisabled);\n    participant === null || participant === void 0 ? void 0 : participant.on('media-status-changed', _handleMediaStatusChanged);\n    return function () {\n      participant === null || participant === void 0 ? void 0 : participant.off('stream-enabled', _handleStreamEnabled);\n      participant === null || participant === void 0 ? void 0 : participant.off('stream-disabled', _handleStreamDisabled);\n      participant === null || participant === void 0 ? void 0 : participant.off('media-status-changed', _handleMediaStatusChanged);\n    };\n  }, [participant]);\n  return {\n    displayName: participant === null || participant === void 0 ? void 0 : participant.displayName,\n    participant: participant,\n    webcamStream: webcamStream,\n    micStream: micStream,\n    screenShareStream: screenShareStream,\n    webcamOn: webcamOn,\n    micOn: micOn,\n    screenShareOn: !!screenShareStream,\n    isLocal: (localParticipant === null || localParticipant === void 0 ? void 0 : localParticipant.id) === participantId,\n    isActiveSpeaker: activeSpeakerId === participantId,\n    isMainParticipant: (mainParticipant === null || mainParticipant === void 0 ? void 0 : mainParticipant.id) === participantId,\n    pinState: pinState,\n    consumeMicStreams: consumeMicStreams,\n    consumeWebcamStreams: consumeWebcamStreams,\n    stopConsumingMicStreams: stopConsumingMicStreams,\n    stopConsumingWebcamStreams: stopConsumingWebcamStreams,\n    setQuality: setQuality,\n    setViewPort: setViewPort,\n    enableMic: enableMic,\n    disableMic: disableMic,\n    enableWebcam: enableWebcam,\n    disableWebcam: disableWebcam,\n    pin: pin,\n    unpin: unpin,\n    switchTo: switchTo,\n    getAudioStats: getAudioStats,\n    getVideoStats: getVideoStats\n  };\n};\n\nvar useConnection = function useConnection(connectionId, _temp) {\n  var _ref = _temp === void 0 ? {\n    onMeeting: {\n      onParticipantJoined: function onParticipantJoined() {},\n      onParticipantLeft: function onParticipantLeft() {},\n      onChatMessage: function onChatMessage() {}\n    }\n  } : _temp,\n      onMeeting = _ref.onMeeting;\n\n  var onParticipantJoined = onMeeting === null || onMeeting === void 0 ? void 0 : onMeeting.onParticipantJoined;\n  var onParticipantLeft = onMeeting === null || onMeeting === void 0 ? void 0 : onMeeting.onParticipantLeft;\n  var onChatMessage = onMeeting === null || onMeeting === void 0 ? void 0 : onMeeting.onChatMessage;\n  var meeting = useMeeting();\n\n  var _useMemo = useMemo(function () {\n    var connection = meeting === null || meeting === void 0 ? void 0 : meeting.connections.get(connectionId);\n\n    if (!connection) {\n      throw new Error('connectionId not found');\n    }\n\n    var connectionParticipants = new Map(connection.meeting.participants);\n    return {\n      connection: connection,\n      connectionParticipants: connectionParticipants\n    };\n  }, [meeting]),\n      connection = _useMemo.connection,\n      connectionParticipants = _useMemo.connectionParticipants;\n\n  var _useState = useState(new Map(connectionParticipants)),\n      _connectionParticipants = _useState[0],\n      setConnectionParticipants = _useState[1];\n\n  var _handleParticipantJoined = function _handleParticipantJoined(participant) {\n    setConnectionParticipants(function (s) {\n      s.set(participant.id, participant);\n      var participantsToSet = new Map(s);\n      return participantsToSet;\n    });\n    onParticipantJoined(participant);\n  };\n\n  var _handleParticipantLeft = function _handleParticipantLeft(participantId) {\n    setConnectionParticipants(function (s) {\n      s[\"delete\"](participantId);\n      var newParticipants = new Map(s);\n      return newParticipants;\n    });\n    onParticipantLeft(participantId);\n  };\n\n  var _handleChatMessage = function _handleChatMessage(data) {\n    onChatMessage(data);\n  };\n\n  useEffect(function () {\n    connection === null || connection === void 0 ? void 0 : connection.meeting.on('participant-joined', _handleParticipantJoined);\n    connection === null || connection === void 0 ? void 0 : connection.meeting.on('participant-left', _handleParticipantLeft);\n    connection === null || connection === void 0 ? void 0 : connection.meeting.on('chat-message', _handleChatMessage);\n    return function () {\n      connection === null || connection === void 0 ? void 0 : connection.meeting.off('participant-joined', _handleParticipantJoined);\n      connection === null || connection === void 0 ? void 0 : connection.meeting.off('participant-left', _handleParticipantLeft);\n      connection === null || connection === void 0 ? void 0 : connection.meeting.off('chat-message', _handleChatMessage);\n    };\n  }, [connection]);\n  return {\n    connection: {\n      id: connection.id,\n      close: connection.close,\n      payload: connection.payload,\n      meeting: {\n        id: connection.meeting.id,\n        sendChatMessage: connection.meeting.sendChatMessage,\n        end: connection.meeting.end,\n        participants: _connectionParticipants\n      }\n    }\n  };\n};\n\nvar usePubSub = function usePubSub(topic, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$onMessageReceive = _ref.onMessageReceived,\n      onMessageReceived = _ref$onMessageReceive === void 0 ? function () {} : _ref$onMessageReceive,\n      _ref$onOldMessagesRec = _ref.onOldMessagesReceived,\n      onOldMessagesReceived = _ref$onOldMessagesRec === void 0 ? function () {} : _ref$onOldMessagesRec;\n\n  var _useMeeting = useMeeting(),\n      meeting = _useMeeting.meeting,\n      isMeetingJoined = _useMeeting.isMeetingJoined;\n\n  var _useState = useState([]),\n      messages = _useState[0],\n      setMessages = _useState[1];\n\n  var isSubscribed = useRef(false);\n\n  var publish = function publish(message, options) {\n    if (meeting) {\n      meeting.pubSub.publish(topic, message, options);\n    }\n  };\n\n  var _handlePubSub = function _handlePubSub(data) {\n    setMessages(function (s) {\n      return [].concat(s, [data]);\n    });\n    onMessageReceived(data);\n  };\n\n  var subscribeToPubsub = function subscribeToPubsub(meeting) {\n    try {\n      var _meeting$pubSub;\n\n      return Promise.resolve(meeting === null || meeting === void 0 ? void 0 : (_meeting$pubSub = meeting.pubSub) === null || _meeting$pubSub === void 0 ? void 0 : _meeting$pubSub.subscribe(topic, _handlePubSub)).then(function (data) {\n        if (data) {\n          onOldMessagesReceived(data.messages);\n          setMessages(data.messages);\n        }\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  useEffect(function () {\n    if (meeting && !isSubscribed.current && isMeetingJoined) {\n      isSubscribed.current = true;\n      subscribeToPubsub(meeting);\n      return function () {\n        var _meeting$pubSub2;\n\n        meeting === null || meeting === void 0 ? void 0 : (_meeting$pubSub2 = meeting.pubSub) === null || _meeting$pubSub2 === void 0 ? void 0 : _meeting$pubSub2.unsubscribe(topic, _handlePubSub);\n      };\n    }\n  }, [meeting, isMeetingJoined]);\n  return {\n    publish: publish,\n    messages: messages\n  };\n};\n\nvar Constants = VideoSDK.Constants;\n\nvar createCameraVideoTrack = function createCameraVideoTrack(_ref) {\n  var _ref$cameraId = _ref.cameraId,\n      cameraId = _ref$cameraId === void 0 ? undefined : _ref$cameraId,\n      _ref$encoderConfig = _ref.encoderConfig,\n      encoderConfig = _ref$encoderConfig === void 0 ? undefined : _ref$encoderConfig,\n      _ref$facingMode = _ref.facingMode,\n      facingMode = _ref$facingMode === void 0 ? undefined : _ref$facingMode,\n      _ref$optimizationMode = _ref.optimizationMode,\n      optimizationMode = _ref$optimizationMode === void 0 ? undefined : _ref$optimizationMode;\n\n  try {\n    return Promise.resolve(VideoSDK.createCameraVideoTrack({\n      cameraId: cameraId,\n      encoderConfig: encoderConfig,\n      facingMode: facingMode,\n      optimizationMode: optimizationMode\n    }));\n  } catch (e) {\n    return Promise.reject(e);\n  }\n};\n\nvar createScreenShareVideoTrack = function createScreenShareVideoTrack(_ref2) {\n  var _ref2$encoderConfig = _ref2.encoderConfig,\n      encoderConfig = _ref2$encoderConfig === void 0 ? undefined : _ref2$encoderConfig,\n      _ref2$optimizationMod = _ref2.optimizationMode,\n      optimizationMode = _ref2$optimizationMod === void 0 ? undefined : _ref2$optimizationMod;\n\n  try {\n    return Promise.resolve(VideoSDK.createScreenShareVideoTrack({\n      encoderConfig: encoderConfig,\n      optimizationMode: optimizationMode\n    }));\n  } catch (e) {\n    return Promise.reject(e);\n  }\n};\n\nvar createMicrophoneAudioTrack = function createMicrophoneAudioTrack(_ref3) {\n  var _ref3$noiseConfig = _ref3.noiseConfig,\n      noiseConfig = _ref3$noiseConfig === void 0 ? undefined : _ref3$noiseConfig,\n      _ref3$encoderConfig = _ref3.encoderConfig,\n      encoderConfig = _ref3$encoderConfig === void 0 ? undefined : _ref3$encoderConfig,\n      _ref3$microphoneId = _ref3.microphoneId,\n      microphoneId = _ref3$microphoneId === void 0 ? undefined : _ref3$microphoneId;\n\n  try {\n    return Promise.resolve(VideoSDK.createMicrophoneAudioTrack({\n      noiseConfig: noiseConfig,\n      encoderConfig: encoderConfig,\n      microphoneId: microphoneId\n    }));\n  } catch (e) {\n    return Promise.reject(e);\n  }\n};\n\nexport { Constants, MeetingConsumer, MeetingProvider, createCameraVideoTrack, createMicrophoneAudioTrack, createScreenShareVideoTrack, useConnection, useMeeting, useParticipant, usePubSub };","map":{"version":3,"sources":["../src/utils.js","../src/meeting/meetingProviderContextDef.js","../src/meeting/MeetingProvider.js","../src/participant/useParticipant.js","../src/connection/useConnection.js","../src/pubSub/usePubSub.js","../src/index.js"],"names":["eventPrifix","events","error","eventEmitter","MeetingProviderContex","createContext","useMeeting","onParticipantJoined","onParticipantLeft","onSpeakerChanged","onPresenterChanged","onMainParticipantChanged","onEntryRequested","onEntryResponded","onRecordingStarted","onRecordingStopped","onChatMessage","onMeetingJoined","onMeetingLeft","onLiveStreamStarted","onLiveStreamStopped","onVideoStateChanged","onVideoSeeked","onWebcamRequested","onMicRequested","onPinStateChanged","onConnectionOpen","onConnetionClose","onSwitchMeeting","onError","onHlsStarted","onHlsStopped","onRecordingStateChanged","onLivestreamStateChanged","onMeetingStateChanged","useEffect","useContext","MeetingConsumer","children","MeetingProvider","config","token","joinWithoutUserInteraction","reinitialiseMeetingOnConfigChange","_reinitialiseMeetingOnConfigChange","deviceInfo","meeting","setMeeting","useState","localParticipant","setLocalParticipant","mainParticipant","setMainParticipant","activeSpeakerId","setActiveSpeakerId","presenterId","setPresenterId","localMicOn","setLocalMicOn","localWebcamOn","setLocalWebcamOn","localScreenShareOn","setLocalScreenShareOn","isRecording","setIsRecording","messages","setMessages","participants","setParticipants","pinnedParticipants","setPinnedParticipants","isLiveStreaming","setIsLiveStreaming","connections","setConnections","isMeetingJoined","setIsMeetingJoined","isHls","setIsHls","recordingState","setRecordingState","livestreamState","setLivestreamState","meetingRef","useRef","localMicOnRef","localWebcamOnRef","localScreenShareOnRef","isRecordingRef","configRef","tokenRef","joinedOnFirstRender","isHlsRef","useMemo","resetStates","_handle_participant_joined","participant","participantsToSet","_handle_participant_left","newParticipants","_handle_presenter_changed","_handle_main_participant_changed","_handle_speaker_changed","_handle_chat_message","_handle_entry_requested","_handle_entry_responded","_handle_recording_started","_handle_recording_stopped","_handle_localParticipant_stream_enabled","stream","_handle_localParticipant_stream_disabled","_handle_live_stream_started","_handle_live_stream_stopped","_handle_hls_started","_handle_hls_stopped","_handle_video_state_changed","_handle_video_seeked","_handle_webcam_requested","_handle_mic_requested","_handle_meeting_joined","data","_handle_meeting_left","_handle_pin_state_changed","participantId","state","pinnedBy","pinnedParticipantsToSet","_handle_connection_open","s","connection","connectionsToSet","_handle_connection_close","newConnections","_handle_switch_meeting","_handle_error","_handle_recording_state_changed","_handle_livestream_state_changed","_handle_meeting_state_changed","join","VideoSDK","leave","end","startRecording","stopRecording","unmuteMic","customAudioTrack","undefined","muteMic","toggleMic","disableWebcam","enableWebcam","customVideoTrack","toggleWebcam","disableScreenShare","enableScreenShare","customScreenShareTrack","toggleScreenShare","sendChatMessage","respondEntry","getMics","getWebcams","changeWebcam","changeMic","startVideo","link","stopVideo","resumeVideo","pauseVideo","currentTime","seekVideo","startLivestream","stopLivestream","connectTo","meetingId","payload","startHls","stopHls","initSDK","sdkType","sdkVersion","reactSDKVersion","baseUrl","useParticipant","onStreamEnabled","onStreamDisabled","onMediaStatusChanged","webcamStream","setwebcamStream","micStream","setMicStream","screenShareStream","setScreenShareStream","pinState","cam","share","webcamOn","setWebcamOn","micOn","setMicOn","setTrack","unSetTrack","_handleStreamEnabled","_handleStreamDisabled","_handleMediaStatusChanged","kind","peerId","newStatus","setQuality","setViewPort","enableMic","disableMic","pin","unpin","getAudioStats","getVideoStats","consumeWebcamStreams","consumeMicStreams","stopConsumingWebcamStreams","stopConsumingMicStreams","switchTo","streams","displayName","screenShareOn","isLocal","isActiveSpeaker","isMainParticipant","useConnection","onMeeting","connectionParticipants","_connectionParticipants","setConnectionParticipants","_handleParticipantJoined","_handleParticipantLeft","_handleChatMessage","id","close","usePubSub","onMessageReceived","onOldMessagesReceived","isSubscribed","publish","_handlePubSub","subscribeToPubsub","Constants","createCameraVideoTrack","cameraId","encoderConfig","facingMode","optimizationMode","createScreenShareVideoTrack","createMicrophoneAudioTrack","noiseConfig","microphoneId"],"mappings":"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","sourcesContent":["import EventEmitter from 'events';\n\nconst eventPrifix = 'videosdk-live-react-sdk';\n\nconst events = {\n  'participant-joined': `${eventPrifix}-participant-joined`,\n  'participant-left': `${eventPrifix}-participant-left`,\n  'speaker-changed': `${eventPrifix}-speaker-changed`,\n  'presenter-changed': `${eventPrifix}-presenter-changed`,\n  'main-participant-changed': `${eventPrifix}-main-participant-changed`,\n  'entry-requested': `${eventPrifix}-entry-requested`,\n  'entry-responded': `${eventPrifix}-entry-responded`,\n  'recording-started': `${eventPrifix}-recording-started`,\n  'recording-stopped': `${eventPrifix}-recording-stopped`,\n  'chat-message': `${eventPrifix}-chat-message`,\n  'meeting-joined': `${eventPrifix}-meeting-joined`,\n  'meeting-left': `${eventPrifix}-meeting-left`,\n  'live-stream-started': `${eventPrifix}-live-stream-started`,\n  'live-stream-stopped': `${eventPrifix}-live-stream-stopped`,\n  'video-state-changed': `${eventPrifix}-video-state-changed`,\n  'video-seeked': `${eventPrifix}-video-seeked`,\n  'webcam-requested': `${eventPrifix}-webcam-requested`,\n  'mic-requested': `${eventPrifix}-mic-requested`,\n  'pin-state-changed': `${eventPrifix}-pin-state-changed`,\n  'connection-open': `${eventPrifix}-connection-open`,\n  'connection-close': `${eventPrifix}-connection-close`,\n  'switch-meeting': `${eventPrifix}-switch-meeting`,\n  error: `${eventPrifix}-error`,\n  'hls-started': `${eventPrifix}-hls-started`,\n  'hls-stopped': `${eventPrifix}-hls-stopped`,\n  'recording-state-changed': `${eventPrifix}-recording-state-changed`,\n  'livestream-state-changed': `${eventPrifix}-livestream-state-changed`,\n  'meeting-state-changed': `${eventPrifix}-meeting-state-changed`\n};\n\nconst eventEmitter = new EventEmitter();\neventEmitter.setMaxListeners(9999);\n\nexport { eventEmitter, events };\n","import React from 'react';\nimport { useContext, createContext, useEffect } from 'react';\nimport { eventEmitter, events } from '../utils';\nexport const MeetingProviderContex = createContext();\n\nexport const useMeeting = ({\n  onParticipantJoined = () => {},\n  onParticipantLeft = () => {},\n  onSpeakerChanged = () => {},\n  onPresenterChanged = () => {},\n  onMainParticipantChanged = () => {},\n  onEntryRequested = () => {},\n  onEntryResponded = () => {},\n  onRecordingStarted = () => {},\n  onRecordingStopped = () => {},\n  onChatMessage = () => {},\n  onMeetingJoined = () => {},\n  onMeetingLeft = () => {},\n  onLiveStreamStarted = () => {},\n  onLiveStreamStopped = () => {},\n  onVideoStateChanged = () => {},\n  onVideoSeeked = () => {},\n  onWebcamRequested = () => {},\n  onMicRequested = () => {},\n  onPinStateChanged = () => {},\n  onConnectionOpen = () => {},\n  onConnetionClose = () => {},\n  onSwitchMeeting = () => {},\n  onError = () => {},\n  onHlsStarted = () => {},\n  onHlsStopped = () => {},\n  onRecordingStateChanged = () => {},\n  onLivestreamStateChanged = () => {},\n  onMeetingStateChanged = () => {}\n} = {}) => {\n  useEffect(() => {\n    eventEmitter.on(events['participant-joined'], onParticipantJoined);\n    eventEmitter.on(events['participant-left'], onParticipantLeft);\n    eventEmitter.on(events['speaker-changed'], onSpeakerChanged);\n    eventEmitter.on(events['presenter-changed'], onPresenterChanged);\n    eventEmitter.on(\n      events['main-participant-changed'],\n      onMainParticipantChanged\n    );\n    eventEmitter.on(events['entry-requested'], onEntryRequested);\n    eventEmitter.on(events['entry-responded'], onEntryResponded);\n    eventEmitter.on(events['recording-started'], onRecordingStarted);\n    eventEmitter.on(events['recording-stopped'], onRecordingStopped);\n    eventEmitter.on(events['chat-message'], onChatMessage);\n    eventEmitter.on(events['meeting-joined'], onMeetingJoined);\n    eventEmitter.on(events['meeting-left'], onMeetingLeft);\n    eventEmitter.on(events['live-stream-started'], onLiveStreamStarted);\n    eventEmitter.on(events['live-stream-stopped'], onLiveStreamStopped);\n    eventEmitter.on(events['video-state-changed'], onVideoStateChanged);\n    eventEmitter.on(events['video-seeked'], onVideoSeeked);\n    eventEmitter.on(events['webcam-requested'], onWebcamRequested);\n    eventEmitter.on(events['mic-requested'], onMicRequested);\n    eventEmitter.on(events['pin-state-changed'], onPinStateChanged);\n    eventEmitter.on(events['connection-open'], onConnectionOpen);\n    eventEmitter.on(events['connection-close'], onConnetionClose);\n    eventEmitter.on(events['switch-meeting'], onSwitchMeeting);\n    eventEmitter.on(events['error'], onError);\n    eventEmitter.on(events['hls-started'], onHlsStarted);\n    eventEmitter.on(events['hls-stopped'], onHlsStopped);\n    eventEmitter.on(events['recording-state-changed'], onRecordingStateChanged);\n    eventEmitter.on(\n      events['livestream-state-changed'],\n      onLivestreamStateChanged\n    );\n    eventEmitter.on(events['meeting-state-changed'], onMeetingStateChanged);\n\n    return () => {\n      eventEmitter.off(events['meeting-state-changed'], onMeetingStateChanged);\n      eventEmitter.off(events['participant-joined'], onParticipantJoined);\n      eventEmitter.off(events['participant-left'], onParticipantLeft);\n      eventEmitter.off(events['speaker-changed'], onSpeakerChanged);\n      eventEmitter.off(events['presenter-changed'], onPresenterChanged);\n      eventEmitter.off(\n        events['main-participant-changed'],\n        onMainParticipantChanged\n      );\n      eventEmitter.off(events['entry-requested'], onEntryRequested);\n      eventEmitter.off(events['entry-responded'], onEntryResponded);\n      eventEmitter.off(events['recording-started'], onRecordingStarted);\n      eventEmitter.off(events['recording-stopped'], onRecordingStopped);\n      eventEmitter.off(events['chat-message'], onChatMessage);\n      eventEmitter.off(events['meeting-joined'], onMeetingJoined);\n      eventEmitter.off(events['meeting-left'], onMeetingLeft);\n      eventEmitter.off(events['live-stream-started'], onLiveStreamStarted);\n      eventEmitter.off(events['live-stream-stopped'], onLiveStreamStopped);\n      eventEmitter.off(events['video-state-changed'], onVideoStateChanged);\n      eventEmitter.off(events['video-seeked'], onVideoSeeked);\n      eventEmitter.off(events['webcam-requested'], onWebcamRequested);\n      eventEmitter.off(events['mic-requested'], onMicRequested);\n      eventEmitter.off(events['pin-state-changed'], onPinStateChanged);\n      eventEmitter.off(events['connection-open'], onConnectionOpen);\n      eventEmitter.off(events['connection-close'], onConnetionClose);\n      eventEmitter.off(events['switch-meeting'], onSwitchMeeting);\n      eventEmitter.off(events['error'], onError);\n      eventEmitter.off(events['hls-started'], onHlsStarted);\n      eventEmitter.off(events['hls-stopped'], onHlsStopped);\n      eventEmitter.off(\n        events['recording-state-changed'],\n        onRecordingStateChanged\n      );\n      eventEmitter.off(\n        events['livestream-state-changed'],\n        onLivestreamStateChanged\n      );\n    };\n  }, []);\n  return useContext(MeetingProviderContex);\n};\n\nexport const MeetingConsumer = ({\n  children,\n  onParticipantJoined = () => {},\n  onParticipantLeft = () => {},\n  onSpeakerChanged = () => {},\n  onPresenterChanged = () => {},\n  onMainParticipantChanged = () => {},\n  onEntryRequested = () => {},\n  onEntryResponded = () => {},\n  onRecordingStarted = () => {},\n  onRecordingStopped = () => {},\n  onChatMessage = () => {},\n  onMeetingJoined = () => {},\n  onMeetingLeft = () => {},\n  onLiveStreamStarted = () => {},\n  onLiveStreamStopped = () => {},\n  onVideoStateChanged = () => {},\n  onVideoSeeked = () => {},\n  onWebcamRequested = () => {},\n  onMicRequested = () => {},\n  onPinStateChanged = () => {},\n  onConnectionOpen = () => {},\n  onConnetionClose = () => {},\n  onSwitchMeeting = () => {},\n  onError = () => {},\n  onHlsStarted = () => {},\n  onHlsStopped = () => {},\n  onRecordingStateChanged = () => {},\n  onLivestreamStateChanged = () => {},\n  onMeetingStateChanged = () => {}\n}) => {\n  useEffect(() => {\n    eventEmitter.on(events['meeting-state-changed'], onMeetingStateChanged);\n    eventEmitter.on(events['participant-joined'], onParticipantJoined);\n    eventEmitter.on(events['participant-left'], onParticipantLeft);\n    eventEmitter.on(events['speaker-changed'], onSpeakerChanged);\n    eventEmitter.on(events['presenter-changed'], onPresenterChanged);\n    eventEmitter.on(\n      events['main-participant-changed'],\n      onMainParticipantChanged\n    );\n    eventEmitter.on(events['entry-requested'], onEntryRequested);\n    eventEmitter.on(events['entry-responded'], onEntryResponded);\n    eventEmitter.on(events['recording-started'], onRecordingStarted);\n    eventEmitter.on(events['recording-stopped'], onRecordingStopped);\n    eventEmitter.on(events['chat-message'], onChatMessage);\n    eventEmitter.on(events['meeting-joined'], onMeetingJoined);\n    eventEmitter.on(events['meeting-left'], onMeetingLeft);\n    eventEmitter.on(events['live-stream-enabled'], onLiveStreamStarted);\n    eventEmitter.on(events['live-stream-disabled'], onLiveStreamStopped);\n    eventEmitter.on(events['video-state-changed'], onVideoStateChanged);\n    eventEmitter.on(events['video-seeked'], onVideoSeeked);\n    eventEmitter.on(events['webcam-requested'], onWebcamRequested);\n    eventEmitter.on(events['mic-requested'], onMicRequested);\n    eventEmitter.on(events['pin-state-changed'], onPinStateChanged);\n    eventEmitter.on(events['connection-open'], onConnectionOpen);\n    eventEmitter.on(events['connection-close'], onConnetionClose);\n    eventEmitter.on(events['switch-meeting'], onSwitchMeeting);\n    eventEmitter.on(events['error'], onError);\n    eventEmitter.on(events['hls-started'], onHlsStarted);\n    eventEmitter.on(events['hls-stopped'], onHlsStopped);\n    eventEmitter.on(events['recording-state-changed'], onRecordingStateChanged);\n    eventEmitter.on(\n      events['livestream-state-changed'],\n      onLivestreamStateChanged\n    );\n\n    return () => {\n      eventEmitter.off(events['meeting-state-changed'], onMeetingStateChanged);\n      eventEmitter.off(events['participant-joined'], onParticipantJoined);\n      eventEmitter.off(events['participant-left'], onParticipantLeft);\n      eventEmitter.off(events['speaker-changed'], onSpeakerChanged);\n      eventEmitter.off(events['presenter-changed'], onPresenterChanged);\n      eventEmitter.off(\n        events['main-participant-changed'],\n        onMainParticipantChanged\n      );\n      eventEmitter.off(events['entry-requested'], onEntryRequested);\n      eventEmitter.off(events['entry-responded'], onEntryResponded);\n      eventEmitter.off(events['recording-started'], onRecordingStarted);\n      eventEmitter.off(events['recording-stopped'], onRecordingStopped);\n      eventEmitter.off(events['chat-message'], onChatMessage);\n      eventEmitter.off(events['meeting-joined'], onMeetingJoined);\n      eventEmitter.off(events['meeting-left'], onMeetingLeft);\n      eventEmitter.off(events['live-stream-enabled'], onLiveStreamStarted);\n      eventEmitter.off(events['live-stream-disabled'], onLiveStreamStopped);\n      eventEmitter.off(events['video-state-changed'], onVideoStateChanged);\n      eventEmitter.off(events['video-seeked'], onVideoSeeked);\n      eventEmitter.off(events['webcam-requested'], onWebcamRequested);\n      eventEmitter.off(events['mic-requested'], onMicRequested);\n      eventEmitter.off(events['pin-state-changed'], onPinStateChanged);\n      eventEmitter.off(events['connection-open'], onConnectionOpen);\n      eventEmitter.off(events['connection-close'], onConnetionClose);\n      eventEmitter.off(events['switch-meeting'], onSwitchMeeting);\n      eventEmitter.off(events['error'], onError);\n      eventEmitter.off(events['hls-started'], onHlsStarted);\n      eventEmitter.off(events['hls-stopped'], onHlsStopped);\n      eventEmitter.off(\n        events['recording-state-changed'],\n        onRecordingStateChanged\n      );\n      eventEmitter.off(\n        events['livestream-state-changed'],\n        onLivestreamStateChanged\n      );\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      <MeetingProviderContex.Consumer>\n        {children}\n      </MeetingProviderContex.Consumer>\n    </React.Fragment>\n  );\n};\n","import { MeetingProviderContex } from './meetingProviderContextDef';\nimport React, { useEffect, useRef, useState, useMemo } from 'react';\nimport { eventEmitter, events } from '../utils';\nimport { VideoSDK } from '@videosdk.live/js-sdk';\nimport { version as reactSDKVersion } from '../../package.json';\n\nconst MeetingProvider = ({\n  children,\n  config,\n  token,\n  joinWithoutUserInteraction,\n  reinitialiseMeetingOnConfigChange: _reinitialiseMeetingOnConfigChange,\n  deviceInfo\n}) => {\n  const [meeting, setMeeting] = useState(null);\n  const [localParticipant, setLocalParticipant] = useState(null);\n  const [mainParticipant, setMainParticipant] = useState(null);\n  const [activeSpeakerId, setActiveSpeakerId] = useState(null);\n  const [presenterId, setPresenterId] = useState(null);\n  const [localMicOn, setLocalMicOn] = useState(false);\n  const [localWebcamOn, setLocalWebcamOn] = useState(false);\n  const [localScreenShareOn, setLocalScreenShareOn] = useState(false);\n  const [isRecording, setIsRecording] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [participants, setParticipants] = useState(new Map());\n  const [pinnedParticipants, setPinnedParticipants] = useState(new Map());\n  const [isLiveStreaming, setIsLiveStreaming] = useState(false);\n  const [connections, setConnections] = useState(new Map());\n  const [isMeetingJoined, setIsMeetingJoined] = useState(false);\n  const [isHls, setIsHls] = useState(false);\n  const [recordingState, setRecordingState] = useState(null);\n  const [livestreamState, setLivestreamState] = useState(null);\n\n  const meetingRef = useRef();\n  const localMicOnRef = useRef();\n  const localWebcamOnRef = useRef();\n  const localScreenShareOnRef = useRef();\n  const isRecordingRef = useRef();\n  const configRef = useRef(config);\n  const tokenRef = useRef(token);\n  const joinedOnFirstRender = useRef(false);\n  const isHlsRef = useRef();\n\n  const reinitialiseMeetingOnConfigChange = useMemo(\n    () => _reinitialiseMeetingOnConfigChange,\n    []\n  );\n\n  useEffect(() => {\n    meetingRef.current = meeting;\n  }, [meeting]);\n  useEffect(() => {\n    localMicOnRef.current = localMicOn;\n  }, [localMicOn]);\n  useEffect(() => {\n    localWebcamOnRef.current = localWebcamOn;\n  }, [localWebcamOn]);\n  useEffect(() => {\n    localScreenShareOnRef.current = localScreenShareOn;\n  }, [localScreenShareOn]);\n  useEffect(() => {\n    isRecordingRef.current = isRecording;\n  }, [isRecording]);\n  useEffect(() => {\n    configRef.current = config;\n  }, [config]);\n  useEffect(() => {\n    tokenRef.current = token;\n  }, [token]);\n  useEffect(() => {\n    isHlsRef.current = isHls;\n  }, [isHls]);\n\n  const resetStates = () => {\n    setMeeting(null);\n    setLocalParticipant(null);\n    setMainParticipant(null);\n    setActiveSpeakerId(null);\n    setPresenterId(null);\n    setLocalMicOn(false);\n    setLocalWebcamOn(false);\n    setLocalScreenShareOn(false);\n    setIsRecording(false);\n    setMessages([]);\n    setIsLiveStreaming(false);\n    setParticipants(new Map());\n    setPinnedParticipants(new Map());\n    setConnections(new Map());\n    setIsMeetingJoined(false);\n    setIsHls(false);\n    setRecordingState(null);\n    setLivestreamState(null);\n  };\n\n  const _handle_participant_joined = participant => {\n    setParticipants(participants => {\n      participants.set(participant.id, participant);\n      const participantsToSet = new Map(participants);\n      return participantsToSet;\n    });\n    eventEmitter.emit(events['participant-joined'], participant);\n  };\n  const _handle_participant_left = participant => {\n    setParticipants(participants => {\n      participants.delete(participant.id);\n\n      const newParticipants = new Map(participants);\n      return newParticipants;\n    });\n    eventEmitter.emit(events['participant-left'], participant);\n  };\n  const _handle_presenter_changed = presenterId => {\n    setPresenterId(presenterId);\n    setLocalScreenShareOn(\n      presenterId === meetingRef?.current?.localParticipant?.id\n    );\n    eventEmitter.emit(events['presenter-changed'], presenterId);\n  };\n  const _handle_main_participant_changed = participant => {\n    setMainParticipant(participant);\n    eventEmitter.emit(events['main-participant-changed'], participant);\n  };\n  const _handle_speaker_changed = activeSpeakerId => {\n    setActiveSpeakerId(activeSpeakerId);\n    eventEmitter.emit(events['speaker-changed'], activeSpeakerId);\n  };\n  const _handle_chat_message = data => {\n    setMessages(s => [...s, data]);\n\n    eventEmitter.emit(events['chat-message'], data);\n  };\n  const _handle_entry_requested = data => {\n    eventEmitter.emit(events['entry-requested'], data);\n  };\n  const _handle_entry_responded = (participantId, decision) => {\n    eventEmitter.emit(events['entry-responded'], participantId, decision);\n  };\n  const _handle_recording_started = () => {\n    setIsRecording(true);\n    eventEmitter.emit(events['recording-started']);\n  };\n  const _handle_recording_stopped = () => {\n    setIsRecording(false);\n    eventEmitter.emit(events['recording-stopped']);\n  };\n\n  const _handle_localParticipant_stream_enabled = stream => {\n    if (stream.track.readyState === 'live') {\n      if (stream.kind === 'video') {\n        setLocalWebcamOn(true);\n      } else if (stream.kind === 'audio') {\n        setLocalMicOn(true);\n      }\n    }\n  };\n  const _handle_localParticipant_stream_disabled = stream => {\n    if (stream.track.readyState === 'ended') {\n      if (stream.kind === 'video') {\n        setLocalWebcamOn(false);\n      } else if (stream.kind === 'audio') {\n        setLocalMicOn(false);\n      }\n    }\n  };\n\n  const _handle_live_stream_started = data => {\n    setIsLiveStreaming(true);\n    eventEmitter.emit(events['live-stream-started'], data);\n  };\n  const _handle_live_stream_stopped = () => {\n    setIsLiveStreaming(false);\n    eventEmitter.emit(events['live-stream-stopped']);\n  };\n  const _handle_hls_started = data => {\n    setIsHls(true);\n    eventEmitter.emit(events['hls-started'], data);\n  };\n  const _handle_hls_stopped = () => {\n    setIsHls(false);\n    eventEmitter.emit(events['hls-stopped']);\n  };\n  const _handle_video_state_changed = data => {\n    eventEmitter.emit(events['video-state-changed'], data);\n  };\n  const _handle_video_seeked = data => {\n    eventEmitter.emit(events['video-seeked'], data);\n  };\n\n  const _handle_webcam_requested = data => {\n    eventEmitter.emit(events['webcam-requested'], data);\n  };\n\n  const _handle_mic_requested = data => {\n    eventEmitter.emit(events['mic-requested'], data);\n  };\n\n  const _handle_meeting_joined = data => {\n    joinedOnFirstRender.current = true;\n    setMessages(s => [...s, ...data.messages]);\n    eventEmitter.emit(events['meeting-joined'], data);\n    setIsMeetingJoined(true);\n  };\n\n  const _handle_meeting_left = () => {\n    eventEmitter.emit(events['meeting-left']);\n\n    const meeting = meetingRef.current;\n\n    if (meeting) {\n      if (typeof meeting?.off === 'function') {\n        meeting.off('meeting-state-changed', _handle_meeting_state_changed);\n        meeting.off('participant-joined', _handle_participant_joined);\n        meeting.off('participant-left', _handle_participant_left);\n        meeting.off('presenter-changed', _handle_presenter_changed);\n        meeting.off(\n          'main-participant-changed',\n          _handle_main_participant_changed\n        );\n        meeting.off('speaker-changed', _handle_speaker_changed);\n        meeting.off('entry-requested', _handle_entry_requested);\n        meeting.off('entry-responded', _handle_entry_responded);\n        meeting.off('chat-message', _handle_chat_message);\n        meeting.off('recording-started', _handle_recording_started);\n        meeting.off('recording-stopped', _handle_recording_stopped);\n        meeting.off('meeting-joined', _handle_meeting_joined);\n        meeting.off('meeting-left', _handle_meeting_left);\n        meeting.off('livestream-started', _handle_live_stream_started);\n        meeting.off('livestream-stopped', _handle_live_stream_stopped);\n        meeting.off('video-state-changed', _handle_video_state_changed);\n        meeting.off('video-seeked', _handle_video_seeked);\n        meeting.off('webcam-requested', _handle_webcam_requested);\n        meeting.off('mic-requested', _handle_mic_requested);\n        meeting.off('pin-state-changed', _handle_pin_state_changed);\n        meeting.off('connection-open', _handle_connection_open);\n        meeting.off('connection-close', _handle_connection_close);\n        meeting.off('switch-meeting', _handle_switch_meeting);\n        meeting.off('error', _handle_error);\n        meeting.off('hls-started', _handle_hls_started);\n        meeting.off('hls-stopped', _handle_hls_stopped);\n        meeting.off('recording-state-changed', _handle_recording_state_changed);\n        meeting.off(\n          'livestream-state-changed',\n          _handle_livestream_state_changed\n        );\n      }\n\n      if (typeof meeting?.localParticipant?.off === 'function') {\n        meeting.localParticipant.off(\n          'stream-enabled',\n          _handle_localParticipant_stream_enabled\n        );\n\n        meeting.localParticipant.off(\n          'stream-disabled',\n          _handle_localParticipant_stream_disabled\n        );\n      }\n\n      resetStates();\n    }\n  };\n\n  const _handle_pin_state_changed = ({ participantId, state, pinnedBy }) => {\n    setPinnedParticipants(pinnedParticipants => {\n      if (!state.cam && !state.share) {\n        pinnedParticipants.delete(participantId);\n      } else {\n        pinnedParticipants.set(participantId, state);\n      }\n\n      const pinnedParticipantsToSet = new Map(pinnedParticipants);\n\n      return pinnedParticipantsToSet;\n    });\n\n    eventEmitter.emit(events['pin-state-changed'], {\n      participantId,\n      state,\n      pinnedBy\n    });\n  };\n\n  const _handle_connection_open = connection => {\n    setConnections(s => {\n      s.set(connection.id, connection);\n      const connectionsToSet = new Map(s);\n      return connectionsToSet;\n    });\n    eventEmitter.emit(events['connection-open'], connection);\n  };\n\n  const _handle_connection_close = connectionId => {\n    setConnections(s => {\n      s.delete(connectionId);\n      const newConnections = new Map(s);\n      return newConnections;\n    });\n    eventEmitter.emit(events['connection-close'], connectionId);\n  };\n\n  const _handle_switch_meeting = d => {\n    eventEmitter.emit(events['switch-meeting'], d);\n  };\n  const _handle_error = data => {\n    eventEmitter.emit(events['error'], data);\n  };\n\n  const _handle_recording_state_changed = data => {\n    setRecordingState(data?.status);\n    eventEmitter.emit(events['recording-state-changed'], data);\n  };\n  const _handle_livestream_state_changed = data => {\n    setLivestreamState(data?.status);\n    eventEmitter.emit(events['livestream-state-changed'], data);\n  };\n\n  const _handle_meeting_state_changed = data => {\n    eventEmitter.emit(events['meeting-state-changed'], data);\n  };\n\n  const join = () => {\n    const meeting = VideoSDK && VideoSDK.initMeeting(configRef.current);\n    setMeeting(meeting);\n    const { localParticipant, participants } = meeting;\n    participants.set(localParticipant.id, localParticipant);\n    setParticipants(participants);\n    setLocalParticipant(localParticipant);\n    meeting.on('meeting-state-changed', _handle_meeting_state_changed);\n    meeting.on('participant-joined', _handle_participant_joined);\n    meeting.on('participant-left', _handle_participant_left);\n    meeting.on('presenter-changed', _handle_presenter_changed);\n    meeting.on('main-participant-changed', _handle_main_participant_changed);\n    meeting.on('speaker-changed', _handle_speaker_changed);\n    meeting.on('entry-requested', _handle_entry_requested);\n    meeting.on('entry-responded', _handle_entry_responded);\n    meeting.on('chat-message', _handle_chat_message);\n    meeting.on('recording-started', _handle_recording_started);\n    meeting.on('recording-stopped', _handle_recording_stopped);\n    meeting.on('meeting-joined', _handle_meeting_joined);\n    meeting.on('meeting-left', _handle_meeting_left);\n    meeting.on('livestream-started', _handle_live_stream_started);\n    meeting.on('livestream-stopped', _handle_live_stream_stopped);\n    meeting.on('video-state-changed', _handle_video_state_changed);\n    meeting.on('video-seeked', _handle_video_seeked);\n    meeting.on('webcam-requested', _handle_webcam_requested);\n    meeting.on('mic-requested', _handle_mic_requested);\n    meeting.on('pin-state-changed', _handle_pin_state_changed);\n\n    meeting.on('connection-open', _handle_connection_open);\n    meeting.on('connection-close', _handle_connection_close);\n    meeting.on('switch-meeting', _handle_switch_meeting);\n    meeting.on('error', _handle_error);\n    meeting.on('hls-started', _handle_hls_started);\n    meeting.on('hls-stopped', _handle_hls_stopped);\n    meeting.on('recording-state-changed', _handle_recording_state_changed);\n    meeting.on('livestream-state-changed', _handle_livestream_state_changed);\n\n    meeting.localParticipant.on(\n      'stream-enabled',\n      _handle_localParticipant_stream_enabled\n    );\n    meeting.localParticipant.on(\n      'stream-disabled',\n      _handle_localParticipant_stream_disabled\n    );\n    meeting.join();\n  };\n\n  const leave = () => {\n    const meeting = meetingRef.current;\n\n    if (meeting) {\n      meeting.leave();\n    }\n  };\n\n  const end = () => {\n    const meeting = meetingRef.current;\n    if (meeting) {\n      meeting.end();\n    }\n  };\n  const startRecording = (webhookUrl, awsDirPath, config) => {\n    const meeting = meetingRef.current;\n    if (meeting) {\n      meeting.startRecording(webhookUrl, awsDirPath, config);\n    }\n  };\n  const stopRecording = () => {\n    const meeting = meetingRef.current;\n    if (meeting) {\n      const isRecording = isRecordingRef.current;\n      if (isRecording) {\n        meeting.stopRecording();\n      }\n    }\n  };\n  const unmuteMic = (customAudioTrack = undefined) => {\n    const meeting = meetingRef.current;\n    if (meeting) {\n      meeting.unmuteMic(customAudioTrack);\n    }\n  };\n  const muteMic = () => {\n    const meeting = meetingRef.current;\n    if (meeting) {\n      meeting.muteMic();\n    }\n  };\n  const toggleMic = (customAudioTrack = undefined) => {\n    const localMicOn = localMicOnRef.current;\n\n    if (localMicOn) {\n      muteMic();\n    } else {\n      unmuteMic(customAudioTrack);\n    }\n  };\n  const disableWebcam = () => {\n    const meeting = meetingRef.current;\n    if (meeting) {\n      meeting.disableWebcam();\n    }\n  };\n  const enableWebcam = (customVideoTrack = undefined) => {\n    const meeting = meetingRef.current;\n    if (meeting) {\n      meeting.enableWebcam(customVideoTrack);\n    }\n  };\n  const toggleWebcam = (customVideoTrack = undefined) => {\n    const localWebcamOn = localWebcamOnRef.current;\n\n    if (localWebcamOn) {\n      disableWebcam();\n    } else {\n      enableWebcam(customVideoTrack);\n    }\n  };\n  const disableScreenShare = () => {\n    const meeting = meetingRef.current;\n    if (meeting) {\n      meeting.disableScreenShare();\n    }\n  };\n  const enableScreenShare = (customScreenShareTrack = undefined) => {\n    const meeting = meetingRef.current;\n    if (meeting) {\n      meeting.enableScreenShare(customScreenShareTrack);\n    }\n  };\n  const toggleScreenShare = (customScreenShareTrack = undefined) => {\n    const localScreenShareOn = localScreenShareOnRef.current;\n\n    if (localScreenShareOn) {\n      disableScreenShare();\n    } else {\n      enableScreenShare(customScreenShareTrack);\n    }\n  };\n  const sendChatMessage = text => {\n    const meeting = meetingRef.current;\n    if (meeting) {\n      meeting.sendChatMessage(text);\n    }\n  };\n  const respondEntry = (participantId, decision) => {\n    const meeting = meetingRef.current;\n    if (meeting) {\n      meeting.respondEntry(participantId, decision);\n    }\n  };\n  const getMics = async () => {\n    const meeting = meetingRef.current;\n    if (meeting) {\n      return await meeting.getMics();\n    }\n  };\n  const getWebcams = async () => {\n    const meeting = meetingRef.current;\n    if (meeting) {\n      return await meeting.getWebcams();\n    }\n  };\n  const changeWebcam = obj => {\n    const meeting = meetingRef.current;\n    if (meeting) {\n      meeting.changeWebcam(obj);\n    }\n  };\n  const changeMic = obj => {\n    const meeting = meetingRef.current;\n    if (meeting) {\n      meeting.changeMic(obj);\n    }\n  };\n  const startVideo = ({ link }) => {\n    const meeting = meetingRef.current;\n    if (meeting) {\n      meeting.startVideo({ link });\n    }\n  };\n\n  const stopVideo = () => {\n    const meeting = meetingRef.current;\n    if (meeting) {\n      meeting.stopVideo();\n    }\n  };\n\n  const resumeVideo = () => {\n    const meeting = meetingRef.current;\n    if (meeting) {\n      meeting.resumeVideo();\n    }\n  };\n\n  const pauseVideo = ({ currentTime }) => {\n    const meeting = meetingRef.current;\n    if (meeting) {\n      meeting.pauseVideo({ currentTime });\n    }\n  };\n\n  const seekVideo = ({ currentTime }) => {\n    const meeting = meetingRef.current;\n    if (meeting) {\n      meeting.seekVideo({ currentTime });\n    }\n  };\n\n  const startLivestream = (streamInfo, config) => {\n    const meeting = meetingRef.current;\n    if (meeting) {\n      meeting.startLivestream(streamInfo, config);\n    }\n  };\n\n  const stopLivestream = () => {\n    const meeting = meetingRef.current;\n    if (meeting) {\n      meeting.stopLivestream();\n    }\n  };\n\n  const connectTo = async ({ meetingId, payload }) => {\n    const meeting = meetingRef.current;\n    if (meeting) {\n      await meeting.connectTo({ meetingId, payload });\n    }\n  };\n\n  const startHls = config => {\n    const meeting = meetingRef.current;\n    if (meeting) {\n      meeting.startHls(config);\n    }\n  };\n\n  const stopHls = () => {\n    const meeting = meetingRef.current;\n    if (meeting) {\n      meeting.stopHls();\n    }\n  };\n\n  const initSDK = () => {\n    VideoSDK.config(tokenRef.current);\n\n    if (deviceInfo) {\n      VideoSDK.analytics(deviceInfo);\n    } else {\n      VideoSDK.analytics({\n        sdkType: 'react-web',\n        sdkVersion: reactSDKVersion\n      });\n    }\n\n    if (joinWithoutUserInteraction) {\n      join();\n    }\n  };\n\n  useEffect(() => {\n    initSDK();\n  }, []);\n\n  useEffect(() => {\n    if (reinitialiseMeetingOnConfigChange && joinedOnFirstRender.current) {\n      leave();\n      initSDK();\n      !joinWithoutUserInteraction && join();\n    }\n  }, [config.meetingId, token, reinitialiseMeetingOnConfigChange]);\n\n  return (\n    <MeetingProviderContex.Provider\n      value={{\n        meetingId: meeting?.id,\n        meeting,\n        baseUrl: meeting?.baseUrl,\n        localParticipant,\n        mainParticipant,\n        activeSpeakerId,\n        participants,\n        presenterId,\n        localMicOn,\n        localWebcamOn,\n        localScreenShareOn,\n        messages,\n        isRecording,\n        isLiveStreaming,\n        pinnedParticipants,\n        connections,\n        isHls,\n        recordingState,\n        livestreamState,\n        isMeetingJoined,\n        //\n        join,\n        leave,\n        end,\n        //\n        startRecording,\n        stopRecording,\n        //\n        sendChatMessage,\n        respondEntry,\n        //\n        muteMic,\n        unmuteMic,\n        toggleMic,\n        //\n        disableWebcam,\n        enableWebcam,\n        toggleWebcam,\n        //\n        disableScreenShare,\n        enableScreenShare,\n        toggleScreenShare,\n        //\n        getMics,\n        getWebcams,\n        changeWebcam,\n        changeMic,\n\n        startVideo,\n        stopVideo,\n        resumeVideo,\n        pauseVideo,\n        seekVideo,\n        startLivestream,\n        stopLivestream,\n        connectTo,\n\n        startHls,\n        stopHls\n      }}\n    >\n      {children}\n    </MeetingProviderContex.Provider>\n  );\n};\n\nexport default MeetingProvider;\n","import { useEffect, useState, useMemo } from 'react';\nimport { useMeeting } from '../meeting/meetingProviderContextDef';\n\nconst useParticipant = (\n  participantId,\n  {\n    onStreamEnabled = () => {},\n    onStreamDisabled = () => {},\n    onMediaStatusChanged = () => {}\n  } = {}\n) => {\n  const [webcamStream, setwebcamStream] = useState(null);\n  const [micStream, setMicStream] = useState(null);\n  const [screenShareStream, setScreenShareStream] = useState(null);\n\n  const meeting = useMeeting();\n\n  const {\n    participants,\n    localParticipant,\n    activeSpeakerId,\n    mainParticipant,\n    pinState\n  } = useMemo(() => {\n    const participants = meeting?.participants;\n    const localParticipant = meeting?.localParticipant;\n    const activeSpeakerId = meeting?.activeSpeakerId;\n    const mainParticipant = meeting?.mainParticipant;\n    const pinState = meeting?.pinnedParticipants?.get(participantId) || {\n      cam: false,\n      share: false\n    };\n\n    // const micOn = meeting?.participants?.get(participantId).micOn || false;\n    // const webcamOn = meeting?.participants?.get(participantId).webcamOn || false;\n\n    return {\n      participants,\n      localParticipant,\n      activeSpeakerId,\n      mainParticipant,\n      pinState\n    };\n  }, [meeting]);\n\n  const participant = participants?.get(participantId);\n\n  const [webcamOn, setWebcamOn] = useState(participant?.webcamOn);\n  const [micOn, setMicOn] = useState(participant?.micOn);\n\n  const setTrack = stream => {\n    if (stream.track.readyState === 'live') {\n      switch (stream.kind) {\n        case 'video':\n          setwebcamStream(stream);\n          break;\n        case 'audio':\n          setMicStream(stream);\n          break;\n        case 'share':\n          setScreenShareStream(stream);\n          break;\n        default:\n          break;\n      }\n    }\n  };\n\n  const unSetTrack = stream => {\n    if (stream.track.readyState !== 'live') {\n      switch (stream.kind) {\n        case 'video':\n          setwebcamStream(null);\n          break;\n        case 'audio':\n          setMicStream(null);\n          break;\n        case 'share':\n          setScreenShareStream(null);\n          break;\n        default:\n          break;\n      }\n    }\n  };\n\n  const _handleStreamEnabled = stream => {\n    setTrack(stream);\n    onStreamEnabled(stream);\n  };\n\n  const _handleStreamDisabled = stream => {\n    unSetTrack(stream);\n    onStreamDisabled(stream);\n  };\n\n  const _handleMediaStatusChanged = data => {\n    const { kind, peerId, newStatus } = data;\n    if (kind == 'audio') {\n      setMicOn(newStatus);\n    } else if (kind == 'video') {\n      setWebcamOn(newStatus);\n    }\n    onMediaStatusChanged({ kind, peerId, newStatus });\n  };\n\n  const setQuality = quality => {\n    participant?.setQuality(quality);\n  };\n\n  const setViewPort = (width, height) => {\n    participant?.setViewPort(width, height);\n  };\n\n  const enableMic = () => {\n    participant?.enableMic();\n  };\n  const disableMic = () => {\n    participant?.disableMic();\n  };\n  const enableWebcam = () => {\n    participant?.enableWebcam();\n  };\n  const disableWebcam = () => {\n    participant?.disableWebcam();\n  };\n  const pin = data => {\n    participant?.pin(data);\n  };\n  const unpin = data => {\n    participant?.unpin(data);\n  };\n  const getAudioStats = async () => {\n    return participant?.getAudioStats();\n  };\n  const getVideoStats = async () => {\n    return participant?.getVideoStats();\n  };\n\n  const consumeWebcamStreams = () => {\n    participant?.consumeWebcamStreams();\n  };\n  const consumeMicStreams = () => {\n    participant?.consumeMicStreams();\n  };\n  const stopConsumingWebcamStreams = () => {\n    participant?.stopConsumingWebcamStreams();\n  };\n  const stopConsumingMicStreams = () => {\n    participant?.stopConsumingMicStreams();\n  };\n  const switchTo = async data => {\n    await participant?.switchTo(data);\n  };\n\n  useEffect(() => {\n    const streams = participant?.streams;\n\n    if (streams) {\n      streams.forEach(stream => {\n        setTrack(stream);\n      });\n    }\n\n    if (participant?.micOn) {\n      setMicOn(micOn);\n    }\n\n    if (participant?.webcamOn) {\n      setWebcamOn(webcamOn);\n    }\n\n    participant?.on('stream-enabled', _handleStreamEnabled);\n\n    participant?.on('stream-disabled', _handleStreamDisabled);\n\n    participant?.on('media-status-changed', _handleMediaStatusChanged);\n\n    return () => {\n      participant?.off('stream-enabled', _handleStreamEnabled);\n\n      participant?.off('stream-disabled', _handleStreamDisabled);\n\n      participant?.off('media-status-changed', _handleMediaStatusChanged);\n    };\n  }, [participant]);\n\n  return {\n    displayName: participant?.displayName,\n    participant,\n    webcamStream,\n    micStream,\n    screenShareStream,\n    webcamOn: webcamOn,\n    micOn: micOn,\n    screenShareOn: !!screenShareStream,\n    isLocal: localParticipant?.id === participantId,\n    isActiveSpeaker: activeSpeakerId === participantId,\n    isMainParticipant: mainParticipant?.id === participantId,\n    pinState,\n\n    //\n    consumeMicStreams,\n    consumeWebcamStreams,\n    stopConsumingMicStreams,\n    stopConsumingWebcamStreams,\n    setQuality,\n    setViewPort,\n    enableMic,\n    disableMic,\n    enableWebcam,\n    disableWebcam,\n    pin,\n    unpin,\n    switchTo,\n    getAudioStats,\n    getVideoStats\n  };\n};\n\nexport default useParticipant;\n","import { useEffect, useState, useMemo } from 'react';\nimport { useMeeting } from '../meeting/meetingProviderContextDef';\n\nconst useConnection = (\n  connectionId,\n  { onMeeting } = {\n    onMeeting: {\n      onParticipantJoined: () => {},\n      onParticipantLeft: () => {},\n      onChatMessage: () => {}\n    }\n  }\n) => {\n  const onParticipantJoined = onMeeting?.onParticipantJoined;\n  const onParticipantLeft = onMeeting?.onParticipantLeft;\n  const onChatMessage = onMeeting?.onChatMessage;\n\n  const meeting = useMeeting();\n\n  const { connection, connectionParticipants } = useMemo(() => {\n    const connection = meeting?.connections.get(connectionId);\n\n    if (!connection) {\n      throw new Error('connectionId not found');\n    }\n\n    const connectionParticipants = new Map(connection.meeting.participants);\n\n    return {\n      connection,\n      connectionParticipants\n    };\n  }, [meeting]);\n\n  const [_connectionParticipants, setConnectionParticipants] = useState(\n    new Map(connectionParticipants)\n  );\n\n  const _handleParticipantJoined = participant => {\n    setConnectionParticipants(s => {\n      s.set(participant.id, participant);\n      const participantsToSet = new Map(s);\n      return participantsToSet;\n    });\n    onParticipantJoined(participant);\n  };\n  const _handleParticipantLeft = participantId => {\n    setConnectionParticipants(s => {\n      s.delete(participantId);\n      const newParticipants = new Map(s);\n      return newParticipants;\n    });\n    onParticipantLeft(participantId);\n  };\n\n  const _handleChatMessage = data => {\n    onChatMessage(data);\n  };\n\n  useEffect(() => {\n    connection?.meeting.on('participant-joined', _handleParticipantJoined);\n    connection?.meeting.on('participant-left', _handleParticipantLeft);\n    connection?.meeting.on('chat-message', _handleChatMessage);\n\n    return () => {\n      connection?.meeting.off('participant-joined', _handleParticipantJoined);\n      connection?.meeting.off('participant-left', _handleParticipantLeft);\n      connection?.meeting.off('chat-message', _handleChatMessage);\n    };\n  }, [connection]);\n\n  return {\n    connection: {\n      id: connection.id,\n      close: connection.close,\n      payload: connection.payload,\n      meeting: {\n        id: connection.meeting.id,\n        sendChatMessage: connection.meeting.sendChatMessage,\n        end: connection.meeting.end,\n        participants: _connectionParticipants\n      }\n    }\n  };\n};\n\nexport default useConnection;\n","import { useEffect, useRef, useState } from 'react';\nimport { useMeeting } from '../meeting/meetingProviderContextDef';\n\nconst usePubSub = (\n  topic,\n  { onMessageReceived = () => {}, onOldMessagesReceived = () => {} } = {}\n) => {\n  const { meeting, isMeetingJoined } = useMeeting();\n  const [messages, setMessages] = useState([]);\n  const isSubscribed = useRef(false);\n  const publish = (message, options) => {\n    if (meeting) {\n      meeting.pubSub.publish(topic, message, options);\n    }\n  };\n\n  const _handlePubSub = data => {\n    setMessages(s => [...s, data]);\n    onMessageReceived(data);\n  };\n\n  const subscribeToPubsub = async meeting => {\n    const data = await meeting?.pubSub?.subscribe(topic, _handlePubSub);\n    if (data) {\n      onOldMessagesReceived(data.messages);\n      setMessages(data.messages);\n    }\n  };\n\n  useEffect(() => {\n    if (meeting && !isSubscribed.current && isMeetingJoined) {\n      isSubscribed.current = true;\n      subscribeToPubsub(meeting);\n\n      return () => {\n        meeting?.pubSub?.unsubscribe(topic, _handlePubSub);\n      };\n    }\n  }, [meeting, isMeetingJoined]);\n\n  return { publish, messages };\n};\n\nexport default usePubSub;\n","import MeetingProvider from './meeting/MeetingProvider';\nimport {\n  MeetingConsumer,\n  useMeeting\n} from './meeting/meetingProviderContextDef';\nimport useParticipant from './participant/useParticipant';\nimport useConnection from './connection/useConnection';\nimport usePubSub from './pubSub/usePubSub';\nimport { VideoSDK } from '@videosdk.live/js-sdk';\n\nconst Constants = VideoSDK.Constants;\n\nconst createCameraVideoTrack = async ({\n  cameraId = undefined,\n  encoderConfig = undefined,\n  facingMode = undefined,\n  optimizationMode = undefined\n}) => {\n  return await VideoSDK.createCameraVideoTrack({\n    cameraId,\n    encoderConfig,\n    facingMode,\n    optimizationMode\n  });\n};\n\nconst createScreenShareVideoTrack = async ({\n  encoderConfig = undefined,\n  optimizationMode = undefined\n  // withAudio = \"enable\" | \"disable\" | \"auto\"\n}) => {\n  return await VideoSDK.createScreenShareVideoTrack({\n    encoderConfig,\n    optimizationMode\n  });\n};\n\nconst createMicrophoneAudioTrack = async ({\n  noiseConfig = undefined,\n  encoderConfig = undefined,\n  microphoneId = undefined\n}) => {\n  return await VideoSDK.createMicrophoneAudioTrack({\n    noiseConfig,\n    encoderConfig,\n    microphoneId\n  });\n};\n\nexport {\n  MeetingProvider,\n  useMeeting,\n  useParticipant,\n  usePubSub,\n  MeetingConsumer,\n  useConnection,\n  Constants,\n  createCameraVideoTrack,\n  createMicrophoneAudioTrack,\n  createScreenShareVideoTrack\n};\n"]},"metadata":{},"sourceType":"module"}